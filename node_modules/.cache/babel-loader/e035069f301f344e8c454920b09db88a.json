{"ast":null,"code":"import axios from \"axios\"; // actiontypes\n\nexport const GET_SEARCH = \"GET_SEARCH\";\nexport const SET_INPUT = \"SET_INPUT\"; // action\n\nexport const setInput = input => {\n  return {\n    type: SET_INPUT,\n    isOpened: isOpened\n  };\n}; // initialState\n\nconst initialState = {\n  results: [],\n  input: \"\"\n};\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_SEARCH:\n      return { ...state,\n        results: action.payload\n      };\n\n    case SET_INPUT:\n      return { ...state,\n        input: action.payload\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/beomsukim/2022/MAEN-client-master/src/redux/module/search.js"],"names":["axios","GET_SEARCH","SET_INPUT","setInput","input","type","isOpened","initialState","results","reducer","state","action","payload"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB,C,CAEP;;AAEA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACjC,SAAO;AAAEC,IAAAA,IAAI,EAAEH,SAAR;AAAmBI,IAAAA,QAAQ,EAAEA;AAA7B,GAAP;AACD,CAFM,C,CAIP;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBJ,EAAAA,KAAK,EAAE;AAFY,CAArB;AAKA,eAAe,SAASK,OAAT,GAA+C;AAAA,MAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,MAARI,MAAQ;;AAC5D,UAAQA,MAAM,CAACN,IAAf;AACE,SAAKJ,UAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELF,QAAAA,OAAO,EAAEG,MAAM,CAACC;AAFX,OAAP;;AAIF,SAAKV,SAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELN,QAAAA,KAAK,EAAEO,MAAM,CAACC;AAFT,OAAP;;AAIF;AACE,aAAOF,KAAP;AAZJ;AAcD","sourcesContent":["import axios from \"axios\";\n// actiontypes\nexport const GET_SEARCH = \"GET_SEARCH\";\nexport const SET_INPUT = \"SET_INPUT\";\n\n// action\n\nexport const setInput = (input) => {\n  return { type: SET_INPUT, isOpened: isOpened };\n};\n\n// initialState\n\nconst initialState = {\n  results: [],\n  input: \"\",\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_SEARCH:\n      return {\n        ...state,\n        results: action.payload,\n      };\n    case SET_INPUT:\n      return {\n        ...state,\n        input: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}