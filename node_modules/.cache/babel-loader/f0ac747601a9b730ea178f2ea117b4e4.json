{"ast":null,"code":"var _jsxFileName = \"/Users/beomsukim/2022/MAEN-client-master/src/components/main/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport PostStyled from \"../styled/mainStyled/PostStyled\";\nimport VideoWrapper from \"../styled/mainStyled/VideoWrapper\";\nimport UserBlock from \"../common/UserBlock\";\nimport VideoModal from \"../videoModal/VideoModal\";\nimport Modal from \"react-modal\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { MdFavorite } from \"react-icons/md\";\nimport { MdPlayArrow } from \"react-icons/md\";\nimport { toggleModal } from \"../../redux/module/post\";\nimport ContentInfo from \"../videoModal/ContentInfo\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Post = _ref => {\n  _s();\n\n  let {\n    post\n  } = _ref;\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [detailProps, setDetailProps] = useState();\n\n  const toggleModal = async () => {\n    /* dispatch로 코드 리팩토링 해야하는 부분*/\n    setIsModalOpen(!isModalOpen);\n\n    if (!isModalOpen) {\n      const response = await axios.get(`http://localhost:8080/api/v1/posts/${post.postsId}/detail`).then(res => {\n        setDetailProps(res.data);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PostStyled, {\n      onClick: toggleModal,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        width: \"100%\",\n        height: \"80%\",\n        src: `http://localhost:8080/api/v1/posts/thumbnail/${post.thumbnailName}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserBlock, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MdFavorite, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), \" :\", post.postsLike, /*#__PURE__*/_jsxDEV(MdPlayArrow, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), \" : \", post.views]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoModal, {\n      isOpened: isModalOpen,\n      onClose: toggleModal,\n      videoSrc: post.thumbnailName,\n      postId: post.postsID,\n      detail: detailProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Post, \"qlIg4EmimMctLtTmcCG5X0n5eHQ=\");\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/beomsukim/2022/MAEN-client-master/src/components/main/Post.js"],"names":["React","useState","useEffect","PostStyled","VideoWrapper","UserBlock","VideoModal","Modal","useSelector","useDispatch","MdFavorite","MdPlayArrow","toggleModal","ContentInfo","axios","Post","post","isModalOpen","setIsModalOpen","detailProps","setDetailProps","response","get","postsId","then","res","data","thumbnailName","postsLike","views","postsID"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,IAAI,GAAG,QAAc;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AACzB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACkB,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,EAA9C;;AAEA,QAAMW,WAAW,GAAG,YAAY;AAC9B;AACAM,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;;AACA,QAAI,CAACA,WAAL,EAAkB;AAChB,YAAMI,QAAQ,GAAG,MAAMP,KAAK,CACzBQ,GADoB,CACf,sCAAqCN,IAAI,CAACO,OAAQ,SADnC,EAEpBC,IAFoB,CAEdC,GAAD,IAAS;AACbL,QAAAA,cAAc,CAACK,GAAG,CAACC,IAAL,CAAd;AACD,OAJoB,CAAvB;AAKD;AACF,GAVD;;AAYA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEd,WAArB;AAAA,8BACE;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,MAAM,EAAC,KAFT;AAGE,QAAA,GAAG,EAAG,gDAA+CI,IAAI,CAACW,aAAc;AAH1E;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAPF,QAOmBX,IAAI,CAACY,SAPxB,eAQE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cARF,SAQqBZ,IAAI,CAACa,KAR1B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,UAAD;AACE,MAAA,QAAQ,EAAEZ,WADZ;AAEE,MAAA,OAAO,EAAEL,WAFX;AAGE,MAAA,QAAQ,EAAEI,IAAI,CAACW,aAHjB;AAIE,MAAA,MAAM,EAAEX,IAAI,CAACc,OAJf;AAKE,MAAA,MAAM,EAAEX;AALV;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA,kBADF;AAqBD,CArCD;;GAAMJ,I;;KAAAA,I;AAuCN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PostStyled from \"../styled/mainStyled/PostStyled\";\nimport VideoWrapper from \"../styled/mainStyled/VideoWrapper\";\nimport UserBlock from \"../common/UserBlock\";\nimport VideoModal from \"../videoModal/VideoModal\";\nimport Modal from \"react-modal\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { MdFavorite } from \"react-icons/md\";\nimport { MdPlayArrow } from \"react-icons/md\";\nimport { toggleModal } from \"../../redux/module/post\";\nimport ContentInfo from \"../videoModal/ContentInfo\";\nimport axios from \"axios\";\n\nconst Post = ({ post }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [detailProps, setDetailProps] = useState();\n\n  const toggleModal = async () => {\n    /* dispatch로 코드 리팩토링 해야하는 부분*/\n    setIsModalOpen(!isModalOpen);\n    if (!isModalOpen) {\n      const response = await axios\n        .get(`http://localhost:8080/api/v1/posts/${post.postsId}/detail`)\n        .then((res) => {\n          setDetailProps(res.data);\n        });\n    }\n  };\n\n  return (\n    <>\n      <PostStyled onClick={toggleModal}>\n        <img\n          width=\"100%\"\n          height=\"80%\"\n          src={`http://localhost:8080/api/v1/posts/thumbnail/${post.thumbnailName}`}\n        />\n        <UserBlock />\n        <MdFavorite /> :{post.postsLike}\n        <MdPlayArrow /> : {post.views}\n      </PostStyled>\n      <VideoModal\n        isOpened={isModalOpen}\n        onClose={toggleModal}\n        videoSrc={post.thumbnailName}\n        postId={post.postsID}\n        detail={detailProps}\n      ></VideoModal>\n    </>\n  );\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}