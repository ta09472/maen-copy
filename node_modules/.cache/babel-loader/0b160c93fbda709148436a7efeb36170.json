{"ast":null,"code":"var _jsxFileName = \"/Users/beomsukim/2022/MAEN-client-master/src/components/search/SearchUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport SearchUserStyled from \"../styled/searchStyled/SearchUserStyled\";\nimport UserBlock from \"../common/UserBlock\";\nimport SearchResultWrapper from \"../styled//searchStyled/SearchResultWrapper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchUser = () => {\n  _s();\n\n  const [isExist, setIsExist] = useState(false);\n  const keyword = useSelector(state => state.search.input);\n  const results = useSelector(state => state.search.results);\n  const dispatch = useDispatch();\n  useEffect(async () => {\n    await dispatch(getSearch(keyword));\n\n    if (results.length == 0) {\n      setIsExist(false);\n    } else {\n      setIsExist(true);\n    }\n  }, [results]);\n  const resultList = results.map((post, index) => /*#__PURE__*/_jsxDEV(Post, {\n    post: post\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(SearchUserStyled, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchResultWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(UserBlock, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserBlock, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserBlock, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchUser, \"6+bJXu7eV+2sdOux4AeccuA9sfA=\", true);\n\n_c = SearchUser;\nexport default SearchUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchUser\");","map":{"version":3,"sources":["/Users/beomsukim/2022/MAEN-client-master/src/components/search/SearchUser.js"],"names":["React","useState","useEffect","SearchUserStyled","UserBlock","SearchResultWrapper","SearchUser","isExist","setIsExist","keyword","useSelector","state","search","input","results","dispatch","useDispatch","getSearch","length","resultList","map","post","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,gBAAP,MAA6B,yCAA7B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,mBAAP,MAAgC,6CAAhC;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMQ,OAAO,GAAGC,WAAW,CAAEC,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaC,KAAzB,CAA3B;AACA,QAAMC,OAAO,GAAGJ,WAAW,CAAEC,KAAD,IAAWA,KAAK,CAACC,MAAN,CAAaE,OAAzB,CAA3B;AACA,QAAMC,QAAQ,GAAGC,WAAW,EAA5B;AAEAd,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMa,QAAQ,CAACE,SAAS,CAACR,OAAD,CAAV,CAAd;;AACA,QAAIK,OAAO,CAACI,MAAR,IAAkB,CAAtB,EAAyB;AACvBV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAFD,MAEO;AACLA,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,GAPQ,EAON,CAACM,OAAD,CAPM,CAAT;AASA,QAAMK,UAAU,GAAGL,OAAO,CAACM,GAAR,CAAY,CAACC,IAAD,EAAOC,KAAP,kBAC7B,QAAC,IAAD;AAAkB,IAAA,IAAI,EAAED;AAAxB,KAAWC,KAAX;AAAA;AAAA;AAAA;AAAA,UADiB,CAAnB;AAGA,sBACE,QAAC,gBAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,mBAAD;AAAA,8BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CA5BD;;GAAMhB,U;;KAAAA,U;AA8BN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport SearchUserStyled from \"../styled/searchStyled/SearchUserStyled\";\nimport UserBlock from \"../common/UserBlock\";\nimport SearchResultWrapper from \"../styled//searchStyled/SearchResultWrapper\";\n\nconst SearchUser = () => {\n  const [isExist, setIsExist] = useState(false);\n  const keyword = useSelector((state) => state.search.input);\n  const results = useSelector((state) => state.search.results);\n  const dispatch = useDispatch();\n\n  useEffect(async () => {\n    await dispatch(getSearch(keyword));\n    if (results.length == 0) {\n      setIsExist(false);\n    } else {\n      setIsExist(true);\n    }\n  }, [results]);\n\n  const resultList = results.map((post, index) => (\n    <Post key={index} post={post}></Post>\n  ));\n  return (\n    <SearchUserStyled>\n      <p>User</p>\n      <SearchResultWrapper>\n        <UserBlock />\n        <UserBlock />\n        <UserBlock />\n      </SearchResultWrapper>\n    </SearchUserStyled>\n  );\n};\n\nexport default SearchUser;\n"]},"metadata":{},"sourceType":"module"}