{"ast":null,"code":"var _jsxFileName = \"/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/components/main/Content.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchPost } from \"../../redux/module/post\";\nimport Post from \"./Post\";\nimport Loader from \"./Loader\";\nimport TargetStyled from \"../styled/mainStyled/TargetStyled\";\nimport PostWrapperStyled from \"../styled/mainStyled/PostWrapperStyled\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Content = () => {\n  _s();\n\n  const [target, setTarget] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [itemLists, setItemLists] = useState([]);\n  const posts = useSelector(state => state.post.posts);\n  const dispatch = useDispatch();\n  let last;\n\n  const getMoreItem = async (last, items) => {\n    setIsLoaded(true);\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    setItemLists(itemLists => itemLists.concat(items));\n    setIsLoaded(false);\n  };\n\n  const onIntersect = async (_ref, observer) => {\n    let [entry] = _ref;\n\n    if (entry.isIntersecting && !isLoaded) {\n      observer.unobserve(entry.target);\n      const response = await axios.get(`http://localhost:8080/api/v1/posts/${last}/recent`);\n      last = await response.data[response.data.length - 1].postsId;\n      let items = response.data;\n      await getMoreItem(last, items);\n      observer.observe(entry.target);\n    }\n  };\n\n  useEffect(async () => {\n    let observer;\n    dispatch(fetchPost());\n    setItemLists(posts);\n    last = await res.data[res.data.length - 1].postsId;\n\n    if (target) {\n      observer = new IntersectionObserver(onIntersect, {\n        threshold: 0.5\n      });\n      observer.observe(target);\n    }\n\n    return () => observer && observer.disconnect();\n  }, [target]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PostWrapperStyled, {\n      children: itemLists.map((post, i) => {\n        return /*#__PURE__*/_jsxDEV(Post, {\n          post: post\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TargetStyled, {\n      ref: setTarget,\n      children: isLoaded && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 50\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Content, \"fCWHH8SdLZYVM75+AUEyldR21tg=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Content;\nexport default Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/components/main/Content.js"],"names":["React","useEffect","useState","useSelector","useDispatch","fetchPost","Post","Loader","TargetStyled","PostWrapperStyled","axios","Content","target","setTarget","isLoaded","setIsLoaded","itemLists","setItemLists","posts","state","post","dispatch","last","getMoreItem","items","Promise","resolve","setTimeout","concat","onIntersect","observer","entry","isIntersecting","unobserve","response","get","data","length","postsId","observe","res","IntersectionObserver","threshold","disconnect","map","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchPost } from \"../../redux/module/post\";\nimport Post from \"./Post\";\nimport Loader from \"./Loader\";\nimport TargetStyled from \"../styled/mainStyled/TargetStyled\";\nimport PostWrapperStyled from \"../styled/mainStyled/PostWrapperStyled\";\nimport axios from \"axios\";\nconst Content = () => {\n  const [target, setTarget] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [itemLists, setItemLists] = useState([]);\n  const posts = useSelector((state) => state.post.posts);\n  const dispatch = useDispatch();\n  let last;\n\n  const getMoreItem = async (last, items) => {\n    setIsLoaded(true);\n    await new Promise((resolve) => setTimeout(resolve, 1000));\n    setItemLists((itemLists) => itemLists.concat(items));\n    setIsLoaded(false);\n  };\n\n  const onIntersect = async ([entry], observer) => {\n    if (entry.isIntersecting && !isLoaded) {\n      observer.unobserve(entry.target);\n      const response = await axios.get(\n        `http://localhost:8080/api/v1/posts/${last}/recent`\n      );\n      last = await response.data[response.data.length - 1].postsId;\n      let items = response.data;\n      await getMoreItem(last, items);\n\n      observer.observe(entry.target);\n    }\n  };\n  useEffect(async () => {\n    let observer;\n    dispatch(fetchPost());\n    setItemLists(posts);\n    last = await res.data[res.data.length - 1].postsId;\n\n    if (target) {\n      observer = new IntersectionObserver(onIntersect, {\n        threshold: 0.5,\n      });\n      observer.observe(target);\n    }\n    return () => observer && observer.disconnect();\n  }, [target]);\n\n  return (\n    <>\n      <PostWrapperStyled>\n        {itemLists.map((post, i) => {\n          return <Post post={post} key={i} />;\n        })}\n      </PostWrapperStyled>\n      <TargetStyled ref={setTarget}>{isLoaded && <Loader />}</TargetStyled>\n    </>\n  );\n};\n\nexport default Content;\n"]},"metadata":{},"sourceType":"module"}