{"ast":null,"code":"import axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nconst cookies = new Cookies();\nconst config = {\n  headers: {\n    ACCESS_TOKEN: accessToken\n  }\n};\n\nconst expireToken = async () => {\n  const accessToken = cookies.get(\"user\").accessToken;\n  const refreshToken = cookies.get(\"user\").refreshToken;\n  const validation = await axios.get(\"http://localhost:8080/api/v1/jwt/expired\").data;\n\n  if (validation) {\n    const response = await axios.get(\"http://localhost:8080/test\", config);\n    console.log(response);\n  } else {\n    const response = await axios.get(\"http://localhost:8080/api/v1/jwt/refresh\", {\n      headers: {\n        REFRESH_TOKEN: refreshToken\n      }\n    });\n    let copied = cookies.get(\"user\");\n    copied.refreshToken = response.headers.refresh_token;\n    copied.accessToken = response.headers.access_token;\n    cookies.set(\"user\", copied, {\n      path: \"/\"\n    });\n  }\n};\n\nexport default expireToken;","map":{"version":3,"sources":["/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/utils/expireToken.js"],"names":["axios","Cookies","cookies","config","headers","ACCESS_TOKEN","accessToken","expireToken","get","refreshToken","validation","data","response","console","log","REFRESH_TOKEN","copied","refresh_token","access_token","set","path"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,MAAMC,OAAO,GAAG,IAAID,OAAJ,EAAhB;AAEA,MAAME,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,YAAY,EAAEC;AADP;AADI,CAAf;;AAMA,MAAMC,WAAW,GAAG,YAAY;AAC9B,QAAMD,WAAW,GAAGJ,OAAO,CAACM,GAAR,CAAY,MAAZ,EAAoBF,WAAxC;AACA,QAAMG,YAAY,GAAGP,OAAO,CAACM,GAAR,CAAY,MAAZ,EAAoBC,YAAzC;AACA,QAAMC,UAAU,GAAG,MAAMV,KAAK,CAACQ,GAAN,CAAU,0CAAV,EACtBG,IADH;;AAGA,MAAID,UAAJ,EAAgB;AACd,UAAME,QAAQ,GAAG,MAAMZ,KAAK,CAACQ,GAAN,CAAU,4BAAV,EAAwCL,MAAxC,CAAvB;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,GAHD,MAGO;AACL,UAAMA,QAAQ,GAAG,MAAMZ,KAAK,CAACQ,GAAN,CACrB,0CADqB,EAErB;AACEJ,MAAAA,OAAO,EAAE;AACPW,QAAAA,aAAa,EAAEN;AADR;AADX,KAFqB,CAAvB;AAQA,QAAIO,MAAM,GAAGd,OAAO,CAACM,GAAR,CAAY,MAAZ,CAAb;AACAQ,IAAAA,MAAM,CAACP,YAAP,GAAsBG,QAAQ,CAACR,OAAT,CAAiBa,aAAvC;AACAD,IAAAA,MAAM,CAACV,WAAP,GAAqBM,QAAQ,CAACR,OAAT,CAAiBc,YAAtC;AACAhB,IAAAA,OAAO,CAACiB,GAAR,CAAY,MAAZ,EAAoBH,MAApB,EAA4B;AAAEI,MAAAA,IAAI,EAAE;AAAR,KAA5B;AACD;AACF,CAvBD;;AAyBA,eAAeb,WAAf","sourcesContent":["import axios from \"axios\";\nimport Cookies from \"universal-cookie\";\n\nconst cookies = new Cookies();\n\nconst config = {\n  headers: {\n    ACCESS_TOKEN: accessToken,\n  },\n};\n\nconst expireToken = async () => {\n  const accessToken = cookies.get(\"user\").accessToken;\n  const refreshToken = cookies.get(\"user\").refreshToken;\n  const validation = await axios.get(\"http://localhost:8080/api/v1/jwt/expired\")\n    .data;\n\n  if (validation) {\n    const response = await axios.get(\"http://localhost:8080/test\", config);\n    console.log(response);\n  } else {\n    const response = await axios.get(\n      \"http://localhost:8080/api/v1/jwt/refresh\",\n      {\n        headers: {\n          REFRESH_TOKEN: refreshToken,\n        },\n      }\n    );\n    let copied = cookies.get(\"user\");\n    copied.refreshToken = response.headers.refresh_token;\n    copied.accessToken = response.headers.access_token;\n    cookies.set(\"user\", copied, { path: \"/\" });\n  }\n};\n\nexport default expireToken;\n"]},"metadata":{},"sourceType":"module"}