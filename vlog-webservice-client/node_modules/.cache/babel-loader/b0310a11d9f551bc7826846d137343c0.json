{"ast":null,"code":"import axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nconst cookies = new Cookies();\nconst accessToken = cookies.get(\"user\").accessToken;\nconst refreshToken = cookies.get(\"user\").refreshToken;\nconst config = {\n  headers: {\n    ACCESS_TOKEN: accessToken\n  }\n};\n\nconst expireToken = async () => {\n  const validation = await axios.get(\"http://localhost:8080/api/v1/jwt/expired\").data;\n\n  if (validation) {\n    const response = await axios.get(\"http://localhost:8080/test\", config);\n    console.log(response);\n  } else {\n    const response = await axios.get(\"http://localhost:8080/api/v1/jwt/refresh\", {\n      headers: {\n        REFRESH_TOKEN: refreshToken\n      }\n    });\n    let copied = cookies.get(\"user\");\n    copied.refreshToken = response.headers.refresh_token;\n    copied.accessToken = response.headers.access_token;\n    cookies.set(\"user\", copied, {\n      path: \"/\"\n    });\n  }\n};\n\nexport default expireToken;","map":{"version":3,"sources":["/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/utils/expireToken.js"],"names":["axios","Cookies","cookies","accessToken","get","refreshToken","config","headers","ACCESS_TOKEN","expireToken","validation","data","response","console","log","REFRESH_TOKEN","copied","refresh_token","access_token","set","path"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,MAAMC,OAAO,GAAG,IAAID,OAAJ,EAAhB;AACA,MAAME,WAAW,GAAGD,OAAO,CAACE,GAAR,CAAY,MAAZ,EAAoBD,WAAxC;AACA,MAAME,YAAY,GAAGH,OAAO,CAACE,GAAR,CAAY,MAAZ,EAAoBC,YAAzC;AACA,MAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,YAAY,EAAEL;AADP;AADI,CAAf;;AAMA,MAAMM,WAAW,GAAG,YAAY;AAC9B,QAAMC,UAAU,GAAG,MAAMV,KAAK,CAACI,GAAN,CAAU,0CAAV,EACtBO,IADH;;AAGA,MAAID,UAAJ,EAAgB;AACd,UAAME,QAAQ,GAAG,MAAMZ,KAAK,CAACI,GAAN,CAAU,4BAAV,EAAwCE,MAAxC,CAAvB;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,GAHD,MAGO;AACL,UAAMA,QAAQ,GAAG,MAAMZ,KAAK,CAACI,GAAN,CACrB,0CADqB,EAErB;AACEG,MAAAA,OAAO,EAAE;AACPQ,QAAAA,aAAa,EAAEV;AADR;AADX,KAFqB,CAAvB;AAQA,QAAIW,MAAM,GAAGd,OAAO,CAACE,GAAR,CAAY,MAAZ,CAAb;AACAY,IAAAA,MAAM,CAACX,YAAP,GAAsBO,QAAQ,CAACL,OAAT,CAAiBU,aAAvC;AACAD,IAAAA,MAAM,CAACb,WAAP,GAAqBS,QAAQ,CAACL,OAAT,CAAiBW,YAAtC;AACAhB,IAAAA,OAAO,CAACiB,GAAR,CAAY,MAAZ,EAAoBH,MAApB,EAA4B;AAAEI,MAAAA,IAAI,EAAE;AAAR,KAA5B;AACD;AACF,CArBD;;AAuBA,eAAeX,WAAf","sourcesContent":["import axios from \"axios\";\nimport Cookies from \"universal-cookie\";\n\nconst cookies = new Cookies();\nconst accessToken = cookies.get(\"user\").accessToken;\nconst refreshToken = cookies.get(\"user\").refreshToken;\nconst config = {\n  headers: {\n    ACCESS_TOKEN: accessToken,\n  },\n};\n\nconst expireToken = async () => {\n  const validation = await axios.get(\"http://localhost:8080/api/v1/jwt/expired\")\n    .data;\n\n  if (validation) {\n    const response = await axios.get(\"http://localhost:8080/test\", config);\n    console.log(response);\n  } else {\n    const response = await axios.get(\n      \"http://localhost:8080/api/v1/jwt/refresh\",\n      {\n        headers: {\n          REFRESH_TOKEN: refreshToken,\n        },\n      }\n    );\n    let copied = cookies.get(\"user\");\n    copied.refreshToken = response.headers.refresh_token;\n    copied.accessToken = response.headers.access_token;\n    cookies.set(\"user\", copied, { path: \"/\" });\n  }\n};\n\nexport default expireToken;\n"]},"metadata":{},"sourceType":"module"}