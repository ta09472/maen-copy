{"ast":null,"code":"import axios from \"axios\"; //actiontypes\n\nconst FETCH_CHANNEL = \"FETCH_CHANNEL\";\nconst FETCH_USER_POST = \"USER_FETCH_POST\"; //action\n\nexport const fetchChannel = userId => async dispatch => {\n  const response = await axios.get(`http://localhost:8080/api/v1/user/${userId}`);\n  dispatch({\n    type: FETCH_CHANNEL,\n    payload: response.data\n  });\n};\nexport const fetchUserPost = userId => async dispatch => {\n  const response = await axios.get(`/api/v1/user/${userId}/posts`);\n  dispatch({\n    type: FETCH_USER_POST,\n    payload: response.data\n  });\n}; //initialState\n\nconst initialState = {\n  channelData: {},\n  userPost: []\n}; //reducer\n\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_CHANNEL:\n      return { ...state,\n        channelData: action.payload\n      };\n\n    case FETCH_USER_POST:\n      return { ...state,\n        userPost: action.payload\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/redux/module/channel.js"],"names":["axios","FETCH_CHANNEL","FETCH_USER_POST","fetchChannel","userId","dispatch","response","get","type","payload","data","fetchUserPost","initialState","channelData","userPost","reducer","state","action"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AAEA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,eAAe,GAAG,iBAAxB,C,CACA;;AAEA,OAAO,MAAMC,YAAY,GAAIC,MAAD,IAAY,MAAOC,QAAP,IAAoB;AAC1D,QAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CACpB,qCAAoCH,MAAO,EADvB,CAAvB;AAGAC,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEP,aAAR;AAAuBQ,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAzC,GAAD,CAAR;AACD,CALM;AAOP,OAAO,MAAMC,aAAa,GAAIP,MAAD,IAAY,MAAOC,QAAP,IAAoB;AAC3D,QAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAW,gBAAeH,MAAO,QAAjC,CAAvB;AACAC,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEN,eAAR;AAAyBO,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAA3C,GAAD,CAAR;AACD,CAHM,C,CAIP;;AACA,MAAME,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,EADM;AAEnBC,EAAAA,QAAQ,EAAE;AAFS,CAArB,C,CAKA;;AAEA,eAAe,SAASC,OAAT,GAA+C;AAAA,MAA9BC,KAA8B,uEAAtBJ,YAAsB;AAAA,MAARK,MAAQ;;AAC5D,UAAQA,MAAM,CAACT,IAAf;AACE,SAAKP,aAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELH,QAAAA,WAAW,EAAEI,MAAM,CAACR;AAFf,OAAP;;AAIF,SAAKP,eAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELF,QAAAA,QAAQ,EAAEG,MAAM,CAACR;AAFZ,OAAP;;AAIF;AACE,aAAOO,KAAP;AAZJ;AAcD","sourcesContent":["import axios from \"axios\";\n\n//actiontypes\n\nconst FETCH_CHANNEL = \"FETCH_CHANNEL\";\nconst FETCH_USER_POST = \"USER_FETCH_POST\";\n//action\n\nexport const fetchChannel = (userId) => async (dispatch) => {\n  const response = await axios.get(\n    `http://localhost:8080/api/v1/user/${userId}`\n  );\n  dispatch({ type: FETCH_CHANNEL, payload: response.data });\n};\n\nexport const fetchUserPost = (userId) => async (dispatch) => {\n  const response = await axios.get(`/api/v1/user/${userId}/posts`);\n  dispatch({ type: FETCH_USER_POST, payload: response.data });\n};\n//initialState\nconst initialState = {\n  channelData: {},\n  userPost: [],\n};\n\n//reducer\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_CHANNEL:\n      return {\n        ...state,\n        channelData: action.payload,\n      };\n    case FETCH_USER_POST:\n      return {\n        ...state,\n        userPost: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}