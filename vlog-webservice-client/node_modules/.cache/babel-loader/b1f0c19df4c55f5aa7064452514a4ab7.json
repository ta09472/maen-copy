{"ast":null,"code":"import axios from \"axios\"; //actiontype\n\nconst LOGIN_REQUEST = \"LOGIN_REQUEST\";\nconst LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\nconst GET_CODE = \"GET_CODE\";\nconst SEND_CODE = \"SEND_CODE\";\nconst GET_PATH = \"GET_PATH\"; // action\n\nexport const loginRequest = (path, code) => async dispatch => {\n  const response = await axios.get(`http://localhost:8080/api/v1/jwt/${path}`, {\n    params: {\n      code: authCode\n    }\n  });\n  dispatch({\n    type: LOGIN_REQUEST,\n    payload: user\n  });\n};\nexport const logoutRequset = user => async dispatch => {\n  const response = await axios.post(\"url\", user);\n  dispatch({\n    type: LOGOUT_REQUEST\n  });\n};\nexport const getCode = code => dispatch => {\n  dispatch({\n    type: GET_CODE,\n    payload: code\n  });\n};\nexport const getPath = path => async dispatch => {\n  dispatch({\n    type: GET_PATH,\n    payload: path\n  });\n}; // initialState\n\nconst initialState = {\n  isLoggedIn: false,\n  user: {},\n  code: null,\n  path: \"\"\n};\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return { ...state,\n        isLoggedIn: true,\n        user: action.payload\n      };\n\n    case LOGOUT_REQUEST:\n      return { ...state,\n        isLoggedIn: false,\n        user: {}\n      };\n\n    case GET_CODE:\n      return { ...state,\n        code: action.payload\n      };\n\n    case GET_PATH:\n      return { ...state,\n        path: action.payload\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/redux/module/login.js"],"names":["axios","LOGIN_REQUEST","LOGOUT_REQUEST","GET_CODE","SEND_CODE","GET_PATH","loginRequest","path","code","dispatch","response","get","params","authCode","type","payload","user","logoutRequset","post","getCode","getPath","initialState","isLoggedIn","reducer","state","action"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,cAAc,GAAG,gBAAvB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,QAAQ,GAAG,UAAjB,C,CACA;;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB,MAAOC,QAAP,IAAoB;AAC9D,QAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAW,oCAAmCJ,IAAK,EAAnD,EAAsD;AAC3EK,IAAAA,MAAM,EAAE;AACNJ,MAAAA,IAAI,EAAEK;AADA;AADmE,GAAtD,CAAvB;AAKAJ,EAAAA,QAAQ,CAAC;AAAEK,IAAAA,IAAI,EAAEb,aAAR;AAAuBc,IAAAA,OAAO,EAAEC;AAAhC,GAAD,CAAR;AACD,CAPM;AASP,OAAO,MAAMC,aAAa,GAAID,IAAD,IAAU,MAAOP,QAAP,IAAoB;AACzD,QAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACkB,IAAN,CAAW,KAAX,EAAkBF,IAAlB,CAAvB;AACAP,EAAAA,QAAQ,CAAC;AAAEK,IAAAA,IAAI,EAAEZ;AAAR,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMiB,OAAO,GAAIX,IAAD,IAAWC,QAAD,IAAc;AAC7CA,EAAAA,QAAQ,CAAC;AAAEK,IAAAA,IAAI,EAAEX,QAAR;AAAkBY,IAAAA,OAAO,EAAEP;AAA3B,GAAD,CAAR;AACD,CAFM;AAIP,OAAO,MAAMY,OAAO,GAAIb,IAAD,IAAU,MAAOE,QAAP,IAAoB;AACnDA,EAAAA,QAAQ,CAAC;AAAEK,IAAAA,IAAI,EAAET,QAAR;AAAkBU,IAAAA,OAAO,EAAER;AAA3B,GAAD,CAAR;AACD,CAFM,C,CAIP;;AAEA,MAAMc,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,KADO;AAEnBN,EAAAA,IAAI,EAAE,EAFa;AAGnBR,EAAAA,IAAI,EAAE,IAHa;AAInBD,EAAAA,IAAI,EAAE;AAJa,CAArB;AAOA,eAAe,SAASgB,OAAT,GAA+C;AAAA,MAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,MAARI,MAAQ;;AAC5D,UAAQA,MAAM,CAACX,IAAf;AACE,SAAKb,aAAL;AACE,aAAO,EACL,GAAGuB,KADE;AAELF,QAAAA,UAAU,EAAE,IAFP;AAGLN,QAAAA,IAAI,EAAES,MAAM,CAACV;AAHR,OAAP;;AAKF,SAAKb,cAAL;AACE,aAAO,EACL,GAAGsB,KADE;AAELF,QAAAA,UAAU,EAAE,KAFP;AAGLN,QAAAA,IAAI,EAAE;AAHD,OAAP;;AAKF,SAAKb,QAAL;AACE,aAAO,EACL,GAAGqB,KADE;AAELhB,QAAAA,IAAI,EAAEiB,MAAM,CAACV;AAFR,OAAP;;AAIF,SAAKV,QAAL;AACE,aAAO,EACL,GAAGmB,KADE;AAELjB,QAAAA,IAAI,EAAEkB,MAAM,CAACV;AAFR,OAAP;;AAIF;AACE,aAAOS,KAAP;AAxBJ;AA0BD","sourcesContent":["import axios from \"axios\";\n//actiontype\n\nconst LOGIN_REQUEST = \"LOGIN_REQUEST\";\nconst LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\nconst GET_CODE = \"GET_CODE\";\nconst SEND_CODE = \"SEND_CODE\";\nconst GET_PATH = \"GET_PATH\";\n// action\n\nexport const loginRequest = (path, code) => async (dispatch) => {\n  const response = await axios.get(`http://localhost:8080/api/v1/jwt/${path}`, {\n    params: {\n      code: authCode,\n    },\n  });\n  dispatch({ type: LOGIN_REQUEST, payload: user });\n};\n\nexport const logoutRequset = (user) => async (dispatch) => {\n  const response = await axios.post(\"url\", user);\n  dispatch({ type: LOGOUT_REQUEST });\n};\n\nexport const getCode = (code) => (dispatch) => {\n  dispatch({ type: GET_CODE, payload: code });\n};\n\nexport const getPath = (path) => async (dispatch) => {\n  dispatch({ type: GET_PATH, payload: path });\n};\n\n// initialState\n\nconst initialState = {\n  isLoggedIn: false,\n  user: {},\n  code: null,\n  path: \"\",\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return {\n        ...state,\n        isLoggedIn: true,\n        user: action.payload,\n      };\n    case LOGOUT_REQUEST:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: {},\n      };\n    case GET_CODE:\n      return {\n        ...state,\n        code: action.payload,\n      };\n    case GET_PATH:\n      return {\n        ...state,\n        path: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}