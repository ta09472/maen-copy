{"ast":null,"code":"var _jsxFileName = \"/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/components/videoModal/CommentList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport CommentListWrapper from \"../styled/modalStyled/CommentListWrapper\";\nimport Comment from \"./Comment\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchComments } from \"../../redux/module/comment\";\nimport CommentETC from \"./CommentETC\";\nimport Cookies from \"universal-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CommentList = () => {\n  _s();\n\n  const [isVisible, setIsVisible] = useState(false);\n  const cookies = new Cookies();\n  const {\n    name\n  } = cookies.get(\"user\");\n\n  const handleClick = () => {\n    setIsVisible(!isVisible);\n  };\n\n  const comments = useSelector(state => state.comment.comments);\n  const commentList = comments.map((comment, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Comment, {\n      comment: comment\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), comment.author === name && /*#__PURE__*/_jsxDEV(CommentETC, {\n      visible: isVisible\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true));\n  return /*#__PURE__*/_jsxDEV(CommentListWrapper, {\n    children: commentList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\n\n_s(CommentList, \"JOcIL9+yUvJu9Who6SR1fSeWYjg=\", false, function () {\n  return [useSelector];\n});\n\n_c = CommentList;\nexport default CommentList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentList\");","map":{"version":3,"sources":["/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/components/videoModal/CommentList.js"],"names":["React","useEffect","useState","CommentListWrapper","Comment","useSelector","useDispatch","fetchComments","CommentETC","Cookies","CommentList","isVisible","setIsVisible","cookies","name","get","handleClick","comments","state","comment","commentList","map","index","author"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,kBAAP,MAA+B,0CAA/B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMW,OAAO,GAAG,IAAIJ,OAAJ,EAAhB;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAWD,OAAO,CAACE,GAAR,CAAY,MAAZ,CAAjB;;AACA,QAAMC,WAAW,GAAG,MAAM;AACxBJ,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAFD;;AAGA,QAAMM,QAAQ,GAAGZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcF,QAA1B,CAA5B;AAEA,QAAMG,WAAW,GAAGH,QAAQ,CAACI,GAAT,CAAa,CAACF,OAAD,EAAUG,KAAV,kBAC/B;AAAA,4BACE,QAAC,OAAD;AAAqB,MAAA,OAAO,EAAEH;AAA9B,OAAcG,KAAd;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEN,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGG,OAAO,CAACI,MAAR,KAAmBT,IAAnB,iBAA2B,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEH;AAArB;AAAA;AAAA;AAAA;AAAA,YAH9B;AAAA,kBADkB,CAApB;AAQA,sBAAO,QAAC,kBAAD;AAAA,cAAqBS;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAlBD;;GAAMV,W;UAOaL,W;;;KAPbK,W;AAoBN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport CommentListWrapper from \"../styled/modalStyled/CommentListWrapper\";\nimport Comment from \"./Comment\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchComments } from \"../../redux/module/comment\";\nimport CommentETC from \"./CommentETC\";\nimport Cookies from \"universal-cookie\";\n\nconst CommentList = () => {\n  const [isVisible, setIsVisible] = useState(false);\n  const cookies = new Cookies();\n  const { name } = cookies.get(\"user\");\n  const handleClick = () => {\n    setIsVisible(!isVisible);\n  };\n  const comments = useSelector((state) => state.comment.comments);\n\n  const commentList = comments.map((comment, index) => (\n    <>\n      <Comment key={index} comment={comment}></Comment>\n      <button onClick={handleClick}>...</button>\n      {comment.author === name && <CommentETC visible={isVisible} />}\n    </>\n  ));\n\n  return <CommentListWrapper>{commentList}</CommentListWrapper>;\n};\n\nexport default CommentList;\n"]},"metadata":{},"sourceType":"module"}