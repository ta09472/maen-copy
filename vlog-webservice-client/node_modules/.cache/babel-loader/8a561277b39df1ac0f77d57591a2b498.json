{"ast":null,"code":"import axios from \"axios\"; // actiontypes;\n\nconst FETCH_COMMENTS = \"FETCH_COMMENTS\";\nconst SUBMIT_COMMENT = \"SUBMIT_COMMENT\";\nconst DELETE_COMMENT = \"DELETE_COMMENT\";\nconst EDIT_COMMENT = \"EDIT_COMMENT\";\nconst GET_PICTURE = \"GET_PICTURE\";\nconst RETYPE_COMMENT = \"RETYPE_COMMENT\"; // action;\n\nexport const fetchComments = post_id => async dispatch => {\n  const response = await axios.get(`/api/v1/posts/${post_id}/comments`);\n  dispatch({\n    type: FETCH_COMMENTS,\n    payload: response.data\n  });\n};\nexport const submitComment = (postsId, userId, input) => async dispatch => {\n  const data = {\n    postsId: postsId,\n    userId: userId,\n    content: input\n  };\n  const response = await axios.post(\"http://localhost:8080/api/v1/comments\", data);\n  let lastComment = await axios.get(`api/v1/posts/${postsId}/comments/${response.data + 1}`);\n  dispatch({\n    type: SUBMIT_COMMENT,\n    payload: lastComment.data[0]\n  });\n};\nexport const editComment = (postsId, userId, input, commentId) => async dispatch => {\n  const data = {\n    postsId: postsId,\n    userId: userId,\n    content: input\n  };\n  const response = await axios.put(`api/v1/comments/${commentId}`, data);\n  dispatch({\n    type: EDIT_COMMENT,\n    payload: input,\n    target: commentId\n  });\n};\nexport const deleteComment = commentId => async dispatch => {\n  const response = await axios.delete(`http://localhost:8080/api/v1/comments/${commentId}`);\n  dispatch({\n    type: DELETE_COMMENT,\n    payload: response.data\n  });\n};\nexport const getPicture = userId => async dispatch => {\n  const response = await axios.get(`api/v1/user/${userId}`);\n  let target = response.data;\n  dispatch({\n    type: GET_PICTURE,\n    payload: target\n  });\n}; // initialState\n\nconst initialState = {\n  comments: [],\n  picture: {},\n  input: \"\",\n  isEdited: false\n};\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_COMMENTS:\n      return { ...state,\n        comments: action.payload\n      };\n\n    case SUBMIT_COMMENT:\n      return { ...state,\n        comments: [action.payload, ...state.comments]\n      };\n\n    case DELETE_COMMENT:\n      return { ...state,\n        comments: state.comments.filter(comment => comment.commentId !== action.payload)\n      };\n\n    case GET_PICTURE:\n      return { ...state,\n        picture: action.payload\n      };\n\n    case EDIT_COMMENT:\n      console.log(action.payload);\n      let targetComment = state.comments.commentId[action.payload];\n      console.log(state.comments);\n      console.log(targetComment);\n      return { ...state,\n        comments: [targetComment]\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/redux/module/comment.js"],"names":["axios","FETCH_COMMENTS","SUBMIT_COMMENT","DELETE_COMMENT","EDIT_COMMENT","GET_PICTURE","RETYPE_COMMENT","fetchComments","post_id","dispatch","response","get","type","payload","data","submitComment","postsId","userId","input","content","post","lastComment","editComment","commentId","put","target","deleteComment","delete","getPicture","initialState","comments","picture","isEdited","reducer","state","action","filter","comment","console","log","targetComment"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n// actiontypes;\nconst FETCH_COMMENTS = \"FETCH_COMMENTS\";\nconst SUBMIT_COMMENT = \"SUBMIT_COMMENT\";\nconst DELETE_COMMENT = \"DELETE_COMMENT\";\nconst EDIT_COMMENT = \"EDIT_COMMENT\";\nconst GET_PICTURE = \"GET_PICTURE\";\nconst RETYPE_COMMENT = \"RETYPE_COMMENT\";\n// action;\n\nexport const fetchComments = (post_id) => async (dispatch) => {\n  const response = await axios.get(`/api/v1/posts/${post_id}/comments`);\n  dispatch({ type: FETCH_COMMENTS, payload: response.data });\n};\n\nexport const submitComment = (postsId, userId, input) => async (dispatch) => {\n  const data = { postsId: postsId, userId: userId, content: input };\n  const response = await axios.post(\n    \"http://localhost:8080/api/v1/comments\",\n    data\n  );\n  let lastComment = await axios.get(\n    `api/v1/posts/${postsId}/comments/${response.data + 1}`\n  );\n  dispatch({ type: SUBMIT_COMMENT, payload: lastComment.data[0] });\n};\n\nexport const editComment = (postsId, userId, input, commentId) => async (\n  dispatch\n) => {\n  const data = { postsId: postsId, userId: userId, content: input };\n  const response = await axios.put(`api/v1/comments/${commentId}`, data);\n  dispatch({ type: EDIT_COMMENT, payload: input, target: commentId });\n};\n\nexport const deleteComment = (commentId) => async (dispatch) => {\n  const response = await axios.delete(\n    `http://localhost:8080/api/v1/comments/${commentId}`\n  );\n  dispatch({ type: DELETE_COMMENT, payload: response.data });\n};\n\nexport const getPicture = (userId) => async (dispatch) => {\n  const response = await axios.get(`api/v1/user/${userId}`);\n  let target = response.data;\n  dispatch({ type: GET_PICTURE, payload: target });\n};\n\n// initialState\nconst initialState = {\n  comments: [],\n  picture: {},\n  input: \"\",\n  isEdited: false,\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_COMMENTS:\n      return {\n        ...state,\n        comments: action.payload,\n      };\n    case SUBMIT_COMMENT:\n      return {\n        ...state,\n        comments: [action.payload, ...state.comments],\n      };\n    case DELETE_COMMENT:\n      return {\n        ...state,\n        comments: state.comments.filter(\n          (comment) => comment.commentId !== action.payload\n        ),\n      };\n    case GET_PICTURE:\n      return {\n        ...state,\n        picture: action.payload,\n      };\n    case EDIT_COMMENT:\n      console.log(action.payload);\n      let targetComment = state.comments.commentId[action.payload];\n\n      console.log(state.comments);\n      console.log(targetComment);\n      return {\n        ...state,\n        comments: [targetComment],\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}