{"ast":null,"code":"import axios from \"axios\"; // actiontypes;\n\nconst FETCH_COMMENTS = \"FETCH_COMMENTS\";\nconst SUBMIT_COMMENT = \"SUBMIT_COMMENT\";\nconst DELETE_COMMENT = \"DELETE_COMMENT\";\nconst EDIT_COMMENT = \"EDIT_COMMENT\";\nconst GET_PICTURE = \"GET_PICTURE\"; // action;\n\nexport const fetchComments = post_id => async dispatch => {\n  const response = await axios.get(`/api/v1/posts/${post_id}/comments`);\n  dispatch({\n    type: FETCH_COMMENTS,\n    payload: response.data\n  });\n};\nexport const submitComment = (postsId, userId, input) => async dispatch => {\n  const data = {\n    postsId: postsId,\n    userId: userId,\n    content: input\n  };\n  const response = await axios.post(\"http://localhost:8080/api/v1/comments\", data);\n  let lastComment = await axios.get(`api/v1/posts/${postsId}/comments/${response.data + 1}`);\n  dispatch({\n    type: SUBMIT_COMMENT,\n    payload: lastComment.data[0]\n  });\n};\nexport const editComment = comment_id => dispatch => {\n  dispatch({\n    type: EDIT_COMMENT\n  });\n};\nexport const deleteComment = commentId => async dispatch => {\n  const response = await axios.delete(`api/v1/comment-like/${commentId}`);\n  dispatch({\n    type: DELETE_COMMENT\n  });\n};\nexport const getPicture = userId => async dispatch => {\n  const response = await axios.get(`api/v1/user/${userId}`);\n  dispatch({\n    type: GET_PICTURE,\n    payload: response.data\n  });\n  console.log(response.data);\n}; // initialState\n\nconst initialState = {\n  comments: [],\n  picture: {},\n  comment: \"\"\n};\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_COMMENTS:\n      return { ...state,\n        comments: action.payload\n      };\n\n    case SUBMIT_COMMENT:\n      return { ...state,\n        comments: [action.payload, ...state.comments]\n      };\n\n    case DELETE_COMMENT:\n      return { ...state\n      };\n\n    case GET_PICTURE:\n      return { ...state,\n        picture: action.payload\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/redux/module/comment.js"],"names":["axios","FETCH_COMMENTS","SUBMIT_COMMENT","DELETE_COMMENT","EDIT_COMMENT","GET_PICTURE","fetchComments","post_id","dispatch","response","get","type","payload","data","submitComment","postsId","userId","input","content","post","lastComment","editComment","comment_id","deleteComment","commentId","delete","getPicture","console","log","initialState","comments","picture","comment","reducer","state","action"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n// actiontypes;\nconst FETCH_COMMENTS = \"FETCH_COMMENTS\";\nconst SUBMIT_COMMENT = \"SUBMIT_COMMENT\";\nconst DELETE_COMMENT = \"DELETE_COMMENT\";\nconst EDIT_COMMENT = \"EDIT_COMMENT\";\nconst GET_PICTURE = \"GET_PICTURE\";\n// action;\n\nexport const fetchComments = (post_id) => async (dispatch) => {\n  const response = await axios.get(`/api/v1/posts/${post_id}/comments`);\n  dispatch({ type: FETCH_COMMENTS, payload: response.data });\n};\n\nexport const submitComment = (postsId, userId, input) => async (dispatch) => {\n  const data = { postsId: postsId, userId: userId, content: input };\n  const response = await axios.post(\n    \"http://localhost:8080/api/v1/comments\",\n    data\n  );\n\n  let lastComment = await axios.get(\n    `api/v1/posts/${postsId}/comments/${response.data + 1}`\n  );\n\n  dispatch({ type: SUBMIT_COMMENT, payload: lastComment.data[0] });\n};\n\nexport const editComment = (comment_id) => (dispatch) => {\n  dispatch({ type: EDIT_COMMENT });\n};\n\nexport const deleteComment = (commentId) => async (dispatch) => {\n  const response = await axios.delete(`api/v1/comment-like/${commentId}`);\n  dispatch({ type: DELETE_COMMENT });\n};\n\nexport const getPicture = (userId) => async (dispatch) => {\n  const response = await axios.get(`api/v1/user/${userId}`);\n  dispatch({ type: GET_PICTURE, payload: response.data });\n  console.log(response.data);\n};\n// initialState\nconst initialState = {\n  comments: [],\n  picture: {},\n  comment: \"\",\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_COMMENTS:\n      return {\n        ...state,\n        comments: action.payload,\n      };\n    case SUBMIT_COMMENT:\n      return {\n        ...state,\n        comments: [action.payload, ...state.comments],\n      };\n    case DELETE_COMMENT:\n      return {\n        ...state,\n      };\n    case GET_PICTURE:\n      return {\n        ...state,\n        picture: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}