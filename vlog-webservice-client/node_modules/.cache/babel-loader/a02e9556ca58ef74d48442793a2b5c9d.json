{"ast":null,"code":"var _jsxFileName = \"/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/Test.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Test = () => {\n  const cookies = new Cookies();\n  let accessToken = cookies.get(\"user\").accessToken;\n  let refreshToken = cookies.get(\"user\").refreshToken;\n  const user = cookies.get(\"user\");\n  const authorization = \"Authorization\";\n  console.log(user);\n  const config = {\n    headers: {\n      ACCESS_TOKEN: accessToken\n    }\n  };\n\n  const handleClick = async () => {\n    const validation = await axios.get(\"http://localhost:8080/api/v1/jwt/expired\").data;\n\n    if (validation) {\n      const response = await axios.get(\"http://localhost:8080/test\", config);\n      console.log(response);\n    } else {\n      const response = await axios.get(\"http://localhost:8080/api/v1/jwt/refresh\", {\n        headers: {\n          REFRESH_TOKEN: refreshToken\n        }\n      });\n      refreshToken = accessToken = response.headers.access_token;\n      console.log(cookies.set(\"user\").refreshToken);\n      cookies.set(\"user\").refreshToken = response.headers.refresh_token;\n      console.log(cookies.get(\"user\").refreshToken);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/Test.js"],"names":["React","useState","axios","Cookies","Test","cookies","accessToken","get","refreshToken","user","authorization","console","log","config","headers","ACCESS_TOKEN","handleClick","validation","data","response","REFRESH_TOKEN","access_token","set","refresh_token"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;;;AACA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,OAAO,GAAG,IAAIF,OAAJ,EAAhB;AACA,MAAIG,WAAW,GAAGD,OAAO,CAACE,GAAR,CAAY,MAAZ,EAAoBD,WAAtC;AACA,MAAIE,YAAY,GAAGH,OAAO,CAACE,GAAR,CAAY,MAAZ,EAAoBC,YAAvC;AACA,QAAMC,IAAI,GAAGJ,OAAO,CAACE,GAAR,CAAY,MAAZ,CAAb;AACA,QAAMG,aAAa,GAAG,eAAtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,QAAMI,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACPC,MAAAA,YAAY,EAAET;AADP;AADI,GAAf;;AAMA,QAAMU,WAAW,GAAG,YAAY;AAC9B,UAAMC,UAAU,GAAG,MAAMf,KAAK,CAACK,GAAN,CACvB,0CADuB,EAEvBW,IAFF;;AAIA,QAAID,UAAJ,EAAgB;AACd,YAAME,QAAQ,GAAG,MAAMjB,KAAK,CAACK,GAAN,CAAU,4BAAV,EAAwCM,MAAxC,CAAvB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AACD,KAHD,MAGO;AACL,YAAMA,QAAQ,GAAG,MAAMjB,KAAK,CAACK,GAAN,CACrB,0CADqB,EAErB;AACEO,QAAAA,OAAO,EAAE;AACPM,UAAAA,aAAa,EAAEZ;AADR;AADX,OAFqB,CAAvB;AAQAA,MAAAA,YAAY,GAAGF,WAAW,GAAGa,QAAQ,CAACL,OAAT,CAAiBO,YAA9C;AAEAV,MAAAA,OAAO,CAACC,GAAR,CAAYP,OAAO,CAACiB,GAAR,CAAY,MAAZ,EAAoBd,YAAhC;AACAH,MAAAA,OAAO,CAACiB,GAAR,CAAY,MAAZ,EAAoBd,YAApB,GAAmCW,QAAQ,CAACL,OAAT,CAAiBS,aAApD;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAYP,OAAO,CAACE,GAAR,CAAY,MAAZ,EAAoBC,YAAhC;AACD;AACF,GAvBD;;AAwBA,sBACE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEQ,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD,CA3CD;;KAAMZ,I;AA6CN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nconst Test = () => {\n  const cookies = new Cookies();\n  let accessToken = cookies.get(\"user\").accessToken;\n  let refreshToken = cookies.get(\"user\").refreshToken;\n  const user = cookies.get(\"user\");\n  const authorization = \"Authorization\";\n  console.log(user);\n  const config = {\n    headers: {\n      ACCESS_TOKEN: accessToken,\n    },\n  };\n\n  const handleClick = async () => {\n    const validation = await axios.get(\n      \"http://localhost:8080/api/v1/jwt/expired\"\n    ).data;\n\n    if (validation) {\n      const response = await axios.get(\"http://localhost:8080/test\", config);\n      console.log(response);\n    } else {\n      const response = await axios.get(\n        \"http://localhost:8080/api/v1/jwt/refresh\",\n        {\n          headers: {\n            REFRESH_TOKEN: refreshToken,\n          },\n        }\n      );\n      refreshToken = accessToken = response.headers.access_token;\n\n      console.log(cookies.set(\"user\").refreshToken);\n      cookies.set(\"user\").refreshToken = response.headers.refresh_token;\n      console.log(cookies.get(\"user\").refreshToken);\n    }\n  };\n  return (\n    <>\n      <input type=\"text\" placeholder=\"...\" />\n      <button onClick={handleClick}>click</button>\n    </>\n  );\n};\n\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}