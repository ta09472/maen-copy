{"ast":null,"code":"import axios from \"axios\"; // actiontypes\n\nexport const FETCH_POST = \"FETCH_POST\";\nexport const FETCH_POST_POPULAR = \"FETCH_POST_POPULAR\";\nexport const FETCH_POST_DETAIL = \"FETCH_POST_DETAIL\";\nexport const TOGGLE_MODAL = \"TOGGLE_MODAL\";\nexport const fetchPost = () => async dispatch => {\n  const response = await axios.get(\"api/v1/posts/recent\");\n  dispatch({\n    type: FETCH_POST,\n    payload: response.data\n  });\n};\nexport const fetchPostPopular = () => async dispatch => {\n  const response = await axios.get(\"api/v1/posts/popular\");\n  response.then(success => {\n    dispatch({\n      type: FETCH_POST_POPULAR,\n      payload: response.data\n    });\n  });\n};\nexport const toggle = isOpened => {\n  return {\n    type: TOGGLE_MODAL,\n    isOpened: isOpened\n  };\n};\nexport const fetchDetailPost = postId => async dispatch => {\n  const response = await axios.get(`/api/v1/posts/${postId}/detail`);\n  dispatch({\n    type: FETCH_POST_DETAIL,\n    payload: response.data\n  });\n}; // reducer\n\nconst initialState = {\n  posts: [],\n  isOpened: false,\n  postDetail: {}\n};\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_POST:\n      return { ...state,\n        posts: action.payload\n      };\n\n    case FETCH_POST_POPULAR:\n      return { ...state,\n        posts: action.payload\n      };\n\n    case TOGGLE_MODAL:\n      return { ...state,\n        isOpened: !action.isOpened\n      };\n\n    case FETCH_POST_DETAIL:\n      return { ...state,\n        postDetail: action.payload\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/redux/module/post.js"],"names":["axios","FETCH_POST","FETCH_POST_POPULAR","FETCH_POST_DETAIL","TOGGLE_MODAL","fetchPost","dispatch","response","get","type","payload","data","fetchPostPopular","then","success","toggle","isOpened","fetchDetailPost","postId","initialState","posts","postDetail","reducer","state","action"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AAEP,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACjD,QAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,qBAAV,CAAvB;AACAF,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAER,UAAR;AAAoBS,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAtC,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMC,gBAAgB,GAAG,MAAM,MAAON,QAAP,IAAoB;AACxD,QAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,sBAAV,CAAvB;AACAD,EAAAA,QAAQ,CAACM,IAAT,CAAeC,OAAD,IAAa;AACzBR,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEP,kBAAR;AAA4BQ,MAAAA,OAAO,EAAEH,QAAQ,CAACI;AAA9C,KAAD,CAAR;AACD,GAFD;AAGD,CALM;AAOP,OAAO,MAAMI,MAAM,GAAIC,QAAD,IAAc;AAClC,SAAO;AAAEP,IAAAA,IAAI,EAAEL,YAAR;AAAsBY,IAAAA,QAAQ,EAAEA;AAAhC,GAAP;AACD,CAFM;AAIP,OAAO,MAAMC,eAAe,GAAIC,MAAD,IAAY,MAAOZ,QAAP,IAAoB;AAC7D,QAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAW,iBAAgBU,MAAO,SAAlC,CAAvB;AACAZ,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEN,iBAAR;AAA2BO,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAA7C,GAAD,CAAR;AACD,CAHM,C,CAKP;;AACA,MAAMQ,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBJ,EAAAA,QAAQ,EAAE,KAFS;AAGnBK,EAAAA,UAAU,EAAE;AAHO,CAArB;AAMA,eAAe,SAASC,OAAT,GAA+C;AAAA,MAA9BC,KAA8B,uEAAtBJ,YAAsB;AAAA,MAARK,MAAQ;;AAC5D,UAAQA,MAAM,CAACf,IAAf;AACE,SAAKR,UAAL;AACE,aAAO,EACL,GAAGsB,KADE;AAELH,QAAAA,KAAK,EAAEI,MAAM,CAACd;AAFT,OAAP;;AAIF,SAAKR,kBAAL;AACE,aAAO,EACL,GAAGqB,KADE;AAELH,QAAAA,KAAK,EAAEI,MAAM,CAACd;AAFT,OAAP;;AAIF,SAAKN,YAAL;AACE,aAAO,EACL,GAAGmB,KADE;AAELP,QAAAA,QAAQ,EAAE,CAACQ,MAAM,CAACR;AAFb,OAAP;;AAIF,SAAKb,iBAAL;AACE,aAAO,EACL,GAAGoB,KADE;AAELF,QAAAA,UAAU,EAAEG,MAAM,CAACd;AAFd,OAAP;;AAIF;AACE,aAAOa,KAAP;AAtBJ;AAwBD","sourcesContent":["import axios from \"axios\";\n// actiontypes\n\nexport const FETCH_POST = \"FETCH_POST\";\nexport const FETCH_POST_POPULAR = \"FETCH_POST_POPULAR\";\nexport const FETCH_POST_DETAIL = \"FETCH_POST_DETAIL\";\nexport const TOGGLE_MODAL = \"TOGGLE_MODAL\";\n\nexport const fetchPost = () => async (dispatch) => {\n  const response = await axios.get(\"api/v1/posts/recent\");\n  dispatch({ type: FETCH_POST, payload: response.data });\n};\n\nexport const fetchPostPopular = () => async (dispatch) => {\n  const response = await axios.get(\"api/v1/posts/popular\");\n  response.then((success) => {\n    dispatch({ type: FETCH_POST_POPULAR, payload: response.data });\n  });\n};\n\nexport const toggle = (isOpened) => {\n  return { type: TOGGLE_MODAL, isOpened: isOpened };\n};\n\nexport const fetchDetailPost = (postId) => async (dispatch) => {\n  const response = await axios.get(`/api/v1/posts/${postId}/detail`);\n  dispatch({ type: FETCH_POST_DETAIL, payload: response.data });\n};\n\n// reducer\nconst initialState = {\n  posts: [],\n  isOpened: false,\n  postDetail: {},\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_POST:\n      return {\n        ...state,\n        posts: action.payload,\n      };\n    case FETCH_POST_POPULAR:\n      return {\n        ...state,\n        posts: action.payload,\n      };\n    case TOGGLE_MODAL:\n      return {\n        ...state,\n        isOpened: !action.isOpened,\n      };\n    case FETCH_POST_DETAIL:\n      return {\n        ...state,\n        postDetail: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}