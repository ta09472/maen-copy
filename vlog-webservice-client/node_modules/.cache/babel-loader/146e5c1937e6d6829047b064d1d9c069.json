{"ast":null,"code":"import axios from \"axios\";\nimport Cookies from \"universal-cookie\";\n\nconst expireToken = async () => {\n  const validation = await axios.get(\"http://localhost:8080/api/v1/jwt/expired\").data;\n\n  if (validation) {\n    const response = await axios.get(\"http://localhost:8080/test\", config);\n    console.log(response);\n  } else {\n    const response = await axios.get(\"http://localhost:8080/api/v1/jwt/refresh\", {\n      headers: {\n        REFRESH_TOKEN: refreshToken\n      }\n    });\n    let copied = cookies.get(\"user\");\n    copied.refreshToken = response.headers.refresh_token;\n    copied.accessToken = response.headers.access_token;\n    cookies.set(\"user\", copied, {\n      path: \"/\"\n    });\n  }\n};\n\nexport default expireToken;","map":{"version":3,"sources":["/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/utils/expireToken.js"],"names":["axios","Cookies","expireToken","validation","get","data","response","config","console","log","headers","REFRESH_TOKEN","refreshToken","copied","cookies","refresh_token","accessToken","access_token","set","path"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AACA,MAAMC,WAAW,GAAG,YAAY;AAC9B,QAAMC,UAAU,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,0CAAV,EACtBC,IADH;;AAGA,MAAIF,UAAJ,EAAgB;AACd,UAAMG,QAAQ,GAAG,MAAMN,KAAK,CAACI,GAAN,CAAU,4BAAV,EAAwCG,MAAxC,CAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACD,GAHD,MAGO;AACL,UAAMA,QAAQ,GAAG,MAAMN,KAAK,CAACI,GAAN,CACrB,0CADqB,EAErB;AACEM,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAEC;AADR;AADX,KAFqB,CAAvB;AAQA,QAAIC,MAAM,GAAGC,OAAO,CAACV,GAAR,CAAY,MAAZ,CAAb;AACAS,IAAAA,MAAM,CAACD,YAAP,GAAsBN,QAAQ,CAACI,OAAT,CAAiBK,aAAvC;AACAF,IAAAA,MAAM,CAACG,WAAP,GAAqBV,QAAQ,CAACI,OAAT,CAAiBO,YAAtC;AACAH,IAAAA,OAAO,CAACI,GAAR,CAAY,MAAZ,EAAoBL,MAApB,EAA4B;AAAEM,MAAAA,IAAI,EAAE;AAAR,KAA5B;AACD;AACF,CArBD;;AAuBA,eAAejB,WAAf","sourcesContent":["import axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nconst expireToken = async () => {\n  const validation = await axios.get(\"http://localhost:8080/api/v1/jwt/expired\")\n    .data;\n\n  if (validation) {\n    const response = await axios.get(\"http://localhost:8080/test\", config);\n    console.log(response);\n  } else {\n    const response = await axios.get(\n      \"http://localhost:8080/api/v1/jwt/refresh\",\n      {\n        headers: {\n          REFRESH_TOKEN: refreshToken,\n        },\n      }\n    );\n    let copied = cookies.get(\"user\");\n    copied.refreshToken = response.headers.refresh_token;\n    copied.accessToken = response.headers.access_token;\n    cookies.set(\"user\", copied, { path: \"/\" });\n  }\n};\n\nexport default expireToken;\n"]},"metadata":{},"sourceType":"module"}