{"ast":null,"code":"var _jsxFileName = \"/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/components/videoModal/CommentInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport InputStyled from \"../styled/modalStyled/InputStyled\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Cookies from \"universal-cookie\";\nimport { submitComment } from \"../../redux/module/comment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentInput = () => {\n  _s();\n\n  const cookies = new Cookies();\n  const isLoggedIn = cookies.get(\"isLoggedIn\");\n  const {\n    postsId\n  } = useSelector(state => state.post.postDetail);\n  const [commentInput, setCommentInput] = useState(\"\");\n  const {\n    input\n  } = useSelector(state => state.comment.input);\n  const dispatch = useDispatch();\n\n  const handleInput = e => {\n    setCommentInput(e.target.value);\n  };\n\n  const handleClick = () => {\n    if (!isLoggedIn) {\n      alert(\"로그인 후 이용가능 합니다.\");\n      return false;\n    }\n  };\n\n  const handleSubmit = e => {\n    if (commentInput !== \"\" && e.key === \"Enter\") {\n      const userId = cookies.get(\"user\").userId;\n      dispatch(submitComment(postsId, userId, commentInput));\n      setCommentInput(\"\");\n      e.target.value = \"\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(InputStyled, {\n    placeholder: \"comment...\",\n    onClick: handleClick,\n    onKeyPress: handleSubmit,\n    onChange: handleInput\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommentInput, \"GPmm8a712ce+JAGuzVEGrAbylqE=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = CommentInput;\nexport default CommentInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentInput\");","map":{"version":3,"sources":["/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/components/videoModal/CommentInput.js"],"names":["React","useState","InputStyled","useSelector","useDispatch","Cookies","submitComment","CommentInput","cookies","isLoggedIn","get","postsId","state","post","postDetail","commentInput","setCommentInput","input","comment","dispatch","handleInput","e","target","value","handleClick","alert","handleSubmit","key","userId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,SAASC,aAAT,QAA8B,4BAA9B;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAMC,OAAO,GAAG,IAAIH,OAAJ,EAAhB;AACA,QAAMI,UAAU,GAAGD,OAAO,CAACE,GAAR,CAAY,YAAZ,CAAnB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAcR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,UAAvB,CAA/B;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAYd,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACM,OAAN,CAAcD,KAA1B,CAA7B;AACA,QAAME,QAAQ,GAAGf,WAAW,EAA5B;;AAEA,QAAMgB,WAAW,GAAIC,CAAD,IAAO;AACzBL,IAAAA,eAAe,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACxB,QAAI,CAACf,UAAL,EAAiB;AACfgB,MAAAA,KAAK,CAAC,iBAAD,CAAL;AACA,aAAO,KAAP;AACD;AACF,GALD;;AAOA,QAAMC,YAAY,GAAIL,CAAD,IAAO;AAC1B,QAAIN,YAAY,KAAK,EAAjB,IAAuBM,CAAC,CAACM,GAAF,KAAU,OAArC,EAA8C;AAC5C,YAAMC,MAAM,GAAGpB,OAAO,CAACE,GAAR,CAAY,MAAZ,EAAoBkB,MAAnC;AACAT,MAAAA,QAAQ,CAACb,aAAa,CAACK,OAAD,EAAUiB,MAAV,EAAkBb,YAAlB,CAAd,CAAR;AACAC,MAAAA,eAAe,CAAC,EAAD,CAAf;AACAK,MAAAA,CAAC,CAACC,MAAF,CAASC,KAAT,GAAiB,EAAjB;AACD;AACF,GAPD;;AAQA,sBACE,QAAC,WAAD;AACE,IAAA,WAAW,EAAC,YADd;AAEE,IAAA,OAAO,EAAEC,WAFX;AAGE,IAAA,UAAU,EAAEE,YAHd;AAIE,IAAA,QAAQ,EAAEN;AAJZ;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAnCD;;GAAMb,Y;UAGgBJ,W,EAEFA,W,EACDC,W;;;KANbG,Y;AAqCN,eAAeA,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport InputStyled from \"../styled/modalStyled/InputStyled\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Cookies from \"universal-cookie\";\n\nimport { submitComment } from \"../../redux/module/comment\";\n\nconst CommentInput = () => {\n  const cookies = new Cookies();\n  const isLoggedIn = cookies.get(\"isLoggedIn\");\n  const { postsId } = useSelector((state) => state.post.postDetail);\n  const [commentInput, setCommentInput] = useState(\"\");\n  const { input } = useSelector((state) => state.comment.input);\n  const dispatch = useDispatch();\n\n  const handleInput = (e) => {\n    setCommentInput(e.target.value);\n  };\n\n  const handleClick = () => {\n    if (!isLoggedIn) {\n      alert(\"로그인 후 이용가능 합니다.\");\n      return false;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    if (commentInput !== \"\" && e.key === \"Enter\") {\n      const userId = cookies.get(\"user\").userId;\n      dispatch(submitComment(postsId, userId, commentInput));\n      setCommentInput(\"\");\n      e.target.value = \"\";\n    }\n  };\n  return (\n    <InputStyled\n      placeholder=\"comment...\"\n      onClick={handleClick}\n      onKeyPress={handleSubmit}\n      onChange={handleInput}\n    ></InputStyled>\n  );\n};\n\nexport default CommentInput;\n"]},"metadata":{},"sourceType":"module"}