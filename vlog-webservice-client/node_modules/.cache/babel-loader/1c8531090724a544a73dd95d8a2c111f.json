{"ast":null,"code":"var _jsxFileName = \"/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/components/channel/ChannelInfoWrapper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ChannelInfoStyled from \"../styled/channelStyled/ChannelInfoStyled\";\nimport UserProfileStyled from \"../styled/commonStyled/UserProfileStyled\";\nimport ChannelDetaillWrapper from \"../styled/channelStyled/ChannelDetaillWrapper\";\nimport UserName from \"../common/UserName\";\nimport ChannelProfile from \"./ChannelProfile\";\nimport ChannelDescription from \"../channel/ChannelDescription\";\nimport Cookies from \"universal-cookie\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FollowButton from \"../styled/commonStyled/FollowButton\";\nimport FollowList from \"./FollowList\";\nimport { setFollow, getFollowing, setUnfollow } from \"../../redux/module/follow\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChannelInfoWrapper = () => {\n  _s();\n\n  const [isOpened, setIsOpened] = useState(false);\n  const channel = useSelector(state => state.channel.channelData);\n  const [isFollowed, setIsFollowed] = useState(false);\n  const cookies = new Cookies();\n  const dispatch = useDispatch();\n\n  const handleFollow = () => {\n    const userId = cookies.get(\"user\").userId;\n    dispatch(getFollowing(userId));\n    dispatch(setFollow(userId, channel.userId));\n    setIsFollowed(true);\n  };\n\n  const handleUnFollow = () => {\n    const userId = cookies.get(\"user\").userId;\n    dispatch(setUnfollow(userId, channel.userId));\n    setIsFollowed(false);\n  };\n\n  const compareFollow = async () => {\n    if (cookies.get(\"isLoggedIn\")) {\n      const response = await axios.get(`/api/v1/user/${cookies.get(\"user\").userId}/following`);\n      response.data.forEach(element => {\n        if (element.userId === cookies.get(\"user\").userId) {\n          setIsFollowed(true);\n          return;\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    compareFollow();\n  }, []);\n  useEffect(() => {}, [channel]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ChannelInfoStyled, {\n      children: [/*#__PURE__*/_jsxDEV(ChannelProfile, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChannelDetaillWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: channel.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChannelDescription, {\n          setIsOpened: setIsOpened\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), isFollowed ? /*#__PURE__*/_jsxDEV(FollowButton, {\n        onClick: handleUnFollow,\n        children: \"Unfollow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(FollowButton, {\n        onClick: handleFollow,\n        children: \"Follow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), isOpened && /*#__PURE__*/_jsxDEV(FollowList, {\n      visible: isOpened,\n      channel: channel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ChannelInfoWrapper, \"NrM7SdtLSuKNdTYuI5rmQYhpl6M=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ChannelInfoWrapper;\nexport default ChannelInfoWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChannelInfoWrapper\");","map":{"version":3,"sources":["/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/components/channel/ChannelInfoWrapper.js"],"names":["React","useState","useEffect","ChannelInfoStyled","UserProfileStyled","ChannelDetaillWrapper","UserName","ChannelProfile","ChannelDescription","Cookies","useParams","useDispatch","useSelector","FollowButton","FollowList","setFollow","getFollowing","setUnfollow","axios","ChannelInfoWrapper","isOpened","setIsOpened","channel","state","channelData","isFollowed","setIsFollowed","cookies","dispatch","handleFollow","userId","get","handleUnFollow","compareFollow","response","data","forEach","element","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ChannelInfoStyled from \"../styled/channelStyled/ChannelInfoStyled\";\nimport UserProfileStyled from \"../styled/commonStyled/UserProfileStyled\";\nimport ChannelDetaillWrapper from \"../styled/channelStyled/ChannelDetaillWrapper\";\nimport UserName from \"../common/UserName\";\nimport ChannelProfile from \"./ChannelProfile\";\nimport ChannelDescription from \"../channel/ChannelDescription\";\nimport Cookies from \"universal-cookie\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FollowButton from \"../styled/commonStyled/FollowButton\";\nimport FollowList from \"./FollowList\";\n\nimport {\n  setFollow,\n  getFollowing,\n  setUnfollow,\n} from \"../../redux/module/follow\";\nimport axios from \"axios\";\n\nconst ChannelInfoWrapper = () => {\n  const [isOpened, setIsOpened] = useState(false);\n  const channel = useSelector((state) => state.channel.channelData);\n  const [isFollowed, setIsFollowed] = useState(false);\n  const cookies = new Cookies();\n  const dispatch = useDispatch();\n\n  const handleFollow = () => {\n    const userId = cookies.get(\"user\").userId;\n    dispatch(getFollowing(userId));\n    dispatch(setFollow(userId, channel.userId));\n    setIsFollowed(true);\n  };\n\n  const handleUnFollow = () => {\n    const userId = cookies.get(\"user\").userId;\n    dispatch(setUnfollow(userId, channel.userId));\n    setIsFollowed(false);\n  };\n\n  const compareFollow = async () => {\n    if (cookies.get(\"isLoggedIn\")) {\n      const response = await axios.get(\n        `/api/v1/user/${cookies.get(\"user\").userId}/following`\n      );\n      response.data.forEach((element) => {\n        if (element.userId === cookies.get(\"user\").userId) {\n          setIsFollowed(true);\n          return;\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    compareFollow();\n  }, []);\n  useEffect(() => {}, [channel]);\n  return (\n    <>\n      <ChannelInfoStyled>\n        <ChannelProfile />\n        <ChannelDetaillWrapper>\n          <h2>{channel.name}</h2>\n          <ChannelDescription setIsOpened={setIsOpened} />\n        </ChannelDetaillWrapper>\n        {isFollowed ? (\n          <FollowButton onClick={handleUnFollow}>Unfollow</FollowButton>\n        ) : (\n          <FollowButton onClick={handleFollow}>Follow</FollowButton>\n        )}\n      </ChannelInfoStyled>\n      {isOpened && <FollowList visible={isOpened} channel={channel} />}\n    </>\n  );\n};\n\nexport default ChannelInfoWrapper;\n"]},"metadata":{},"sourceType":"module"}