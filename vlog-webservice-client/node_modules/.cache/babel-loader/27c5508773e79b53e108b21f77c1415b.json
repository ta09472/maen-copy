{"ast":null,"code":"import axios from \"axios\"; // actiontypes\n\nexport const FETCH_POST = \"FETCH_POST\";\nexport const FETCH_ERROR = \"FETCH_ERROR\";\nexport const FETCH_POST_POPULAR = \"FETCH_POST_POPULAR\";\nexport const FETCH_POST_DETAIL = \"FETCH_POST_DETAIL\";\nexport const TOGGLE_MODAL = \"TOGGLE_MODAL\";\nexport const DELETE_POST = \"DELETE_POST\";\nexport const EDIT_POST = \"EDIT_POST\";\nexport const fetchPost = () => async dispatch => {\n  const response = await axios.get(\"api/v1/posts/recent\");\n  dispatch({\n    type: FETCH_POST,\n    payload: response.data\n  });\n};\nexport const fetchPostPopular = pageNum => async dispatch => {\n  const response = await axios.get(\"api/v1/posts/popular\");\n  response.then(success => {\n    dispatch({\n      type: FETCH_POST_POPULAR,\n      payload: response.data\n    });\n  }).catch(error => {\n    dispatch({\n      type: FETCH_ERROR,\n      payload: error\n    });\n  });\n};\nexport const toggle = isOpened => {\n  return {\n    type: TOGGLE_MODAL,\n    isOpened: isOpened\n  };\n};\nexport const fetchDetailPost = postId => async dispatch => {\n  const response = await axios.get(`/api/v1/posts/${postId}/detail`);\n  dispatch({\n    type: FETCH_POST_DETAIL,\n    payload: response.data\n  });\n};\nexport const deletePost = postId => async dispatch => {\n  const response = await axios.delete(`http://localhost:8080/api/v1/posts/${postId}`);\n  dispatch({\n    type: DELETE_POST\n  });\n};\nexport const editPost = postId => async dispatch => {}; // reducer\n\nconst initialState = {\n  posts: [],\n  isOpened: false,\n  postDetail: {},\n  edit: {}\n};\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FETCH_POST:\n      return { ...state,\n        posts: action.payload\n      };\n\n    case FETCH_ERROR:\n      return { ...state,\n        posts: action.payload\n      };\n\n    case FETCH_POST_POPULAR:\n      return { ...state,\n        posts: action.payload\n      };\n\n    case TOGGLE_MODAL:\n      return { ...state,\n        isOpened: !action.isOpened\n      };\n\n    case FETCH_POST_DETAIL:\n      return { ...state,\n        postDetail: action.payload\n      };\n\n    case DELETE_POST:\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/redux/module/post.js"],"names":["axios","FETCH_POST","FETCH_ERROR","FETCH_POST_POPULAR","FETCH_POST_DETAIL","TOGGLE_MODAL","DELETE_POST","EDIT_POST","fetchPost","dispatch","response","get","type","payload","data","fetchPostPopular","pageNum","then","success","catch","error","toggle","isOpened","fetchDetailPost","postId","deletePost","delete","editPost","initialState","posts","postDetail","edit","reducer","state","action"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n// actiontypes\n\nexport const FETCH_POST = \"FETCH_POST\";\nexport const FETCH_ERROR = \"FETCH_ERROR\";\nexport const FETCH_POST_POPULAR = \"FETCH_POST_POPULAR\";\nexport const FETCH_POST_DETAIL = \"FETCH_POST_DETAIL\";\nexport const TOGGLE_MODAL = \"TOGGLE_MODAL\";\nexport const DELETE_POST = \"DELETE_POST\";\nexport const EDIT_POST = \"EDIT_POST\";\n\nexport const fetchPost = () => async (dispatch) => {\n  const response = await axios.get(\"api/v1/posts/recent\");\n  dispatch({ type: FETCH_POST, payload: response.data });\n};\n\nexport const fetchPostPopular = (pageNum) => async (dispatch) => {\n  const response = await axios.get(\"api/v1/posts/popular\");\n  response\n    .then((success) => {\n      dispatch({ type: FETCH_POST_POPULAR, payload: response.data });\n    })\n    .catch((error) => {\n      dispatch({ type: FETCH_ERROR, payload: error });\n    });\n};\n\nexport const toggle = (isOpened) => {\n  return { type: TOGGLE_MODAL, isOpened: isOpened };\n};\n\nexport const fetchDetailPost = (postId) => async (dispatch) => {\n  const response = await axios.get(`/api/v1/posts/${postId}/detail`);\n  dispatch({ type: FETCH_POST_DETAIL, payload: response.data });\n};\n\nexport const deletePost = (postId) => async (dispatch) => {\n  const response = await axios.delete(\n    `http://localhost:8080/api/v1/posts/${postId}`\n  );\n  dispatch({ type: DELETE_POST });\n};\n\nexport const editPost = (postId) => async (dispatch) => {};\n\n// reducer\nconst initialState = {\n  posts: [],\n  isOpened: false,\n  postDetail: {},\n  edit: {},\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_POST:\n      return {\n        ...state,\n        posts: action.payload,\n      };\n    case FETCH_ERROR:\n      return {\n        ...state,\n        posts: action.payload,\n      };\n    case FETCH_POST_POPULAR:\n      return {\n        ...state,\n        posts: action.payload,\n      };\n    case TOGGLE_MODAL:\n      return {\n        ...state,\n        isOpened: !action.isOpened,\n      };\n    case FETCH_POST_DETAIL:\n      return {\n        ...state,\n        postDetail: action.payload,\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}