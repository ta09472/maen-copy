{"ast":null,"code":"import axios from \"axios\"; // actiontypes\n\nconst GET_SEARCH = \"GET_SEARCH\";\nconst SET_INPUT = \"SET_INPUT\";\nconst RETURN_NULL = \"RETURN_NULL\";\nconst GET_USER_SEARCH = \"GET_USER_SEARCH\"; // action\n\nexport const setInput = input => async dispatch => {\n  await dispatch({\n    type: SET_INPUT,\n    payload: input\n  });\n};\nexport const getSearch = keyword => async dispatch => {\n  if (keyword.length !== 0) {\n    const response = await axios.get(`api/v1/posts/${keyword}/search/recent`);\n    await console.log(response);\n\n    if (response.data.length !== 0) {\n      dispatch({\n        type: GET_SEARCH,\n        payload: response.data,\n        isPostEmpty: false\n      });\n    } else {\n      dispatch({\n        type: GET_SEARCH,\n        payload: response.data,\n        isPostEmpty: true\n      });\n    }\n  }\n};\nexport const getUserSearch = (keyword, pageNumber) => async dispatch => {\n  if (keyword.length !== 0) {\n    const response = await axios.get(`api/v1/user/search/${keyword}/0`);\n\n    if (response.data.length !== 0) {\n      dispatch({\n        type: GET_USER_SEARCH,\n        payload: response.data,\n        isUserEmpty: false\n      });\n    } else {\n      dispatch({\n        type: GET_USER_SEARCH,\n        payload: response.data,\n        isUserEmpty: true\n      });\n    }\n  }\n}; // initialState\n\nconst initialState = {\n  results: [],\n  userResults: [],\n  input: \"\",\n  isPostEmpty: true,\n  isUserEmpty: true\n}; // reducer\n\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_SEARCH:\n      return { ...state,\n        results: action.payload,\n        isPostEmpty: action.isPostEmpty\n      };\n\n    case GET_USER_SEARCH:\n      return { ...state,\n        userResults: action.payload,\n        isUserEmpty: action.isUserEmpty\n      };\n\n    case SET_INPUT:\n      return { ...state,\n        input: action.payload\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/redux/module/search.js"],"names":["axios","GET_SEARCH","SET_INPUT","RETURN_NULL","GET_USER_SEARCH","setInput","input","dispatch","type","payload","getSearch","keyword","length","response","get","console","log","data","isPostEmpty","getUserSearch","pageNumber","isUserEmpty","initialState","results","userResults","reducer","state","action"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n// actiontypes\nconst GET_SEARCH = \"GET_SEARCH\";\nconst SET_INPUT = \"SET_INPUT\";\nconst RETURN_NULL = \"RETURN_NULL\";\nconst GET_USER_SEARCH = \"GET_USER_SEARCH\";\n// action\n\nexport const setInput = (input) => async (dispatch) => {\n  await dispatch({ type: SET_INPUT, payload: input });\n};\n\nexport const getSearch = (keyword) => async (dispatch) => {\n  if (keyword.length !== 0) {\n    const response = await axios.get(`api/v1/posts/${keyword}/search/recent`);\n    await console.log(response);\n    if (response.data.length !== 0) {\n      dispatch({\n        type: GET_SEARCH,\n        payload: response.data,\n        isPostEmpty: false,\n      });\n    } else {\n      dispatch({ type: GET_SEARCH, payload: response.data, isPostEmpty: true });\n    }\n  }\n};\n\nexport const getUserSearch = (keyword, pageNumber) => async (dispatch) => {\n  if (keyword.length !== 0) {\n    const response = await axios.get(`api/v1/user/search/${keyword}/0`);\n\n    if (response.data.length !== 0) {\n      dispatch({\n        type: GET_USER_SEARCH,\n        payload: response.data,\n        isUserEmpty: false,\n      });\n    } else {\n      dispatch({\n        type: GET_USER_SEARCH,\n        payload: response.data,\n        isUserEmpty: true,\n      });\n    }\n  }\n};\n// initialState\n\nconst initialState = {\n  results: [],\n  userResults: [],\n  input: \"\",\n  isPostEmpty: true,\n  isUserEmpty: true,\n};\n// reducer\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_SEARCH:\n      return {\n        ...state,\n        results: action.payload,\n        isPostEmpty: action.isPostEmpty,\n      };\n    case GET_USER_SEARCH:\n      return {\n        ...state,\n        userResults: action.payload,\n        isUserEmpty: action.isUserEmpty,\n      };\n    case SET_INPUT:\n      return {\n        ...state,\n        input: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}