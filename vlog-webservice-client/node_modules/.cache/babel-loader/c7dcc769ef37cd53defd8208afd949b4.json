{"ast":null,"code":"import axios from \"axios\"; //actiontype\n\nconst LOGIN_REQUEST = \"LOGIN_REQUEST\";\nconst LOGOUT_REQUEST = \"LOGOUT_REQUEST\"; // action\n\nexport const loginRequest = user => async dispatch => {\n  /*const response = await axios.get(\"url\");  */\n  dispatch({\n    type: LOGIN_REQUEST\n  });\n};\nexport const logoutRequset = user => async dispatch => {\n  const response = await axios.post(\"url\", user);\n  dispatch({\n    type: LOGOUT_REQUEST\n  });\n}; // initialState\n\nlocalStorage.setItem(\"isLoggedIn\", \"fasle\");\nconst localIsLoggedIn = localStorage.getItem(\"isLoggedIn\");\nconst initialState = {\n  isLoggedIn: localIsLoggedIn,\n  user: {}\n};\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return { ...state,\n        isLoggedIn: true\n      };\n\n    case LOGOUT_REQUEST:\n      return { ...state,\n        isLoggedIn: false,\n        user: {}\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/redux/module/login.js"],"names":["axios","LOGIN_REQUEST","LOGOUT_REQUEST","loginRequest","user","dispatch","type","logoutRequset","response","post","localStorage","setItem","localIsLoggedIn","getItem","initialState","isLoggedIn","reducer","state","action"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,cAAc,GAAG,gBAAvB,C,CAEA;;AAEA,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU,MAAOC,QAAP,IAAoB;AACxD;AACAA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMM,aAAa,GAAIH,IAAD,IAAU,MAAOC,QAAP,IAAoB;AACzD,QAAMG,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAN,CAAW,KAAX,EAAkBL,IAAlB,CAAvB;AACAC,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEJ;AAAR,GAAD,CAAR;AACD,CAHM,C,CAIP;;AAEAQ,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,OAAnC;AAEA,MAAMC,eAAe,GAAGF,YAAY,CAACG,OAAb,CAAqB,YAArB,CAAxB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAEH,eADO;AAEnBR,EAAAA,IAAI,EAAE;AAFa,CAArB;AAKA,eAAe,SAASY,OAAT,GAA+C;AAAA,MAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,MAARI,MAAQ;;AAC5D,UAAQA,MAAM,CAACZ,IAAf;AACE,SAAKL,aAAL;AACE,aAAO,EACL,GAAGgB,KADE;AAELF,QAAAA,UAAU,EAAE;AAFP,OAAP;;AAIF,SAAKb,cAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELF,QAAAA,UAAU,EAAE,KAFP;AAGLX,QAAAA,IAAI,EAAE;AAHD,OAAP;;AAKF;AACE,aAAOa,KAAP;AAbJ;AAeD","sourcesContent":["import axios from \"axios\";\n//actiontype\n\nconst LOGIN_REQUEST = \"LOGIN_REQUEST\";\nconst LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\n\n// action\n\nexport const loginRequest = (user) => async (dispatch) => {\n  /*const response = await axios.get(\"url\");  */\n  dispatch({ type: LOGIN_REQUEST });\n};\n\nexport const logoutRequset = (user) => async (dispatch) => {\n  const response = await axios.post(\"url\", user);\n  dispatch({ type: LOGOUT_REQUEST });\n};\n// initialState\n\nlocalStorage.setItem(\"isLoggedIn\", \"fasle\");\n\nconst localIsLoggedIn = localStorage.getItem(\"isLoggedIn\");\n\nconst initialState = {\n  isLoggedIn: localIsLoggedIn,\n  user: {},\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return {\n        ...state,\n        isLoggedIn: true,\n      };\n    case LOGOUT_REQUEST:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: {},\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}