{"ast":null,"code":"var _jsxFileName = \"/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/components/main/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useState, useEffect } from \"react\";\nimport PostStyled from \"../styled/mainStyled/PostStyled\";\nimport UserBlock from \"../common/UserBlock\";\nimport VideoModal from \"../videoModal/VideoModal\";\nimport Modal from \"react-modal\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { MdFavorite } from \"react-icons/md\";\nimport { MdPlayArrow } from \"react-icons/md\";\nimport { toggleModal } from \"../../redux/module/post\";\nimport ContentInfo from \"../videoModal/ContentInfo\";\nimport axios from \"axios\";\nimport { fetchDetailPost } from \"../../redux/module/post\";\nimport UserBlockStlyed from \"../styled/commonStyled/UserBlockStyled\";\nimport UserProfileStyled from \"../styled/commonStyled/UserProfileStyled\";\nimport ThumbnailWrapper from \"../styled/mainStyled/ThumbnailWrapper\";\nimport Tag from \"../common/Tag\";\nimport { fetchComments } from \"../../redux/module/comment\";\nimport { Link } from \"react-router-dom\";\nimport TagListWrapper from \"../styled/commonStyled/TagListWrapper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Post = _ref => {\n  _s();\n\n  let {\n    post\n  } = _ref;\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [postTag, setPostTag] = useState(post);\n  const postDetail = useSelector(state => state.post.postDetail);\n  const dispatch = useDispatch();\n  const isOpened = useSelector(state => state.post.isOpened);\n\n  const toggleModal = () => {\n    const postId = post.postsId;\n    setIsModalOpen(!isModalOpen);\n\n    if (!isModalOpen) {\n      dispatch(fetchDetailPost(post.postsId));\n      dispatch(fetchComments(`${postId}`));\n    }\n\n    document.body.style.overflow = \"auto\";\n  };\n\n  const tagList = post.tags.map((tag, index) => /*#__PURE__*/_jsxDEV(Tag, {\n    tag: tag,\n    children: tag\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this));\n\n  const handleClick = e => {\n    console.log(e.target.dataset.userName);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PostStyled, {\n      onClick: toggleModal,\n      children: [/*#__PURE__*/_jsxDEV(ThumbnailWrapper, {\n        width: \"100%\",\n        height: \"80%\",\n        src: `http://localhost:8080/api/v1/posts/thumbnail/${post.thumbnailName}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserBlockStlyed, {\n        \"data-userName\": post.authorName,\n        children: [/*#__PURE__*/_jsxDEV(UserProfileStyled, {\n          width: \"32px\",\n          height: \"32px\",\n          src: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.authorName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MdFavorite, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), \" :\", post.postsLike, /*#__PURE__*/_jsxDEV(MdPlayArrow, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), \" : \", post.views, /*#__PURE__*/_jsxDEV(TagListWrapper, {\n        children: tagList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoModal, {\n      isOpened: isModalOpen,\n      onClose: toggleModal,\n      videoSrc: post.thumbnailName,\n      tags: post.tags\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Post, \"477tXKR60KE7GA44OVjT4mT2lQM=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/components/main/Post.js"],"names":["React","memo","useState","useEffect","PostStyled","UserBlock","VideoModal","Modal","useSelector","useDispatch","MdFavorite","MdPlayArrow","toggleModal","ContentInfo","axios","fetchDetailPost","UserBlockStlyed","UserProfileStyled","ThumbnailWrapper","Tag","fetchComments","Link","TagListWrapper","Post","post","isModalOpen","setIsModalOpen","postTag","setPostTag","postDetail","state","dispatch","isOpened","postId","postsId","document","body","style","overflow","tagList","tags","map","tag","index","handleClick","e","console","log","target","dataset","userName","thumbnailName","authorName","postsLike","views"],"mappings":"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","sourcesContent":["import React, { memo, useState, useEffect } from \"react\";\nimport PostStyled from \"../styled/mainStyled/PostStyled\";\nimport UserBlock from \"../common/UserBlock\";\nimport VideoModal from \"../videoModal/VideoModal\";\nimport Modal from \"react-modal\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { MdFavorite } from \"react-icons/md\";\nimport { MdPlayArrow } from \"react-icons/md\";\nimport { toggleModal } from \"../../redux/module/post\";\nimport ContentInfo from \"../videoModal/ContentInfo\";\nimport axios from \"axios\";\nimport { fetchDetailPost } from \"../../redux/module/post\";\nimport UserBlockStlyed from \"../styled/commonStyled/UserBlockStyled\";\nimport UserProfileStyled from \"../styled/commonStyled/UserProfileStyled\";\nimport ThumbnailWrapper from \"../styled/mainStyled/ThumbnailWrapper\";\nimport Tag from \"../common/Tag\";\nimport { fetchComments } from \"../../redux/module/comment\";\nimport { Link } from \"react-router-dom\";\nimport TagListWrapper from \"../styled/commonStyled/TagListWrapper\";\n\nconst Post = ({ post }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [postTag, setPostTag] = useState(post);\n  const postDetail = useSelector((state) => state.post.postDetail);\n  const dispatch = useDispatch();\n  const isOpened = useSelector((state) => state.post.isOpened);\n\n  const toggleModal = () => {\n    const postId = post.postsId;\n    setIsModalOpen(!isModalOpen);\n\n    if (!isModalOpen) {\n      dispatch(fetchDetailPost(post.postsId));\n      dispatch(fetchComments(`${postId}`));\n    }\n\n    document.body.style.overflow = \"auto\";\n  };\n\n  const tagList = post.tags.map((tag, index) => (\n    <Tag key={index} tag={tag}>\n      {tag}\n    </Tag>\n  ));\n  const handleClick = (e) => {\n    console.log(e.target.dataset.userName);\n  };\n\n  return (\n    <>\n      <PostStyled onClick={toggleModal}>\n        <ThumbnailWrapper\n          width=\"100%\"\n          height=\"80%\"\n          src={`http://localhost:8080/api/v1/posts/thumbnail/${post.thumbnailName}`}\n        />\n        <UserBlockStlyed data-userName={post.authorName}>\n          <UserProfileStyled width=\"32px\" height=\"32px\" src=\"\" />\n          <p>{post.authorName}</p>\n        </UserBlockStlyed>\n        <MdFavorite /> :{post.postsLike}\n        <MdPlayArrow /> : {post.views}\n        <TagListWrapper>{tagList}</TagListWrapper>\n      </PostStyled>\n\n      <VideoModal\n        isOpened={isModalOpen}\n        onClose={toggleModal}\n        videoSrc={post.thumbnailName}\n        tags={post.tags}\n      ></VideoModal>\n    </>\n  );\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}