{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { MdFavoriteBorder } from \"react-icons/md\";\nimport { MdFavorite } from \"react-icons/md\";\nimport react, { useState, useLayoutEffect } from \"react\";\nimport LikeStyled from \"../styled/modalStyled/LikeStyled\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Cookies from \"universal-cookie\";\nimport { requestLike, requestLikeCancel, fetchLike } from \"../../redux/module/like\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Like = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    postsId\n  } = useSelector(state => state.post.postDetail);\n  const postLikeList = useSelector(state => state.like.postLikeList);\n  const likeState = useSelector(state => state.like.isLiked);\n  const [isLiked, setIsLiked] = useState(likeState);\n  const cookies = new Cookies();\n  const isLoggedIn = cookies.get(\"isLoggedIn\");\n  const user = cookies.get(\"user\");\n\n  const handleLike = e => {\n    if (!isLoggedIn) {\n      alert(\"로그인 후 이용가능 합니다.\");\n      return false;\n    }\n\n    if (!isLiked) {\n      dispatch(requestLike(postsId, user.userId));\n      setIsLiked(true);\n    } else {\n      dispatch(requestLikeCancel(postsId, user.userId, user.accessToken));\n      setIsLiked(false);\n    }\n  };\n\n  const isLike = () => {\n    dispatch(fetchLike(user.userId, postsId));\n    console.log(likeState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLike()\n  }, void 0, false);\n};\n\n_s(Like, \"GGuSFj1vU/L1LeSb+iOHwJ9DnxY=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Like;\nexport default Like;\n\nvar _c;\n\n$RefreshReg$(_c, \"Like\");","map":{"version":3,"sources":["/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/components/videoModal/Like.js"],"names":["MdFavoriteBorder","MdFavorite","react","useState","useLayoutEffect","LikeStyled","useSelector","useDispatch","Cookies","requestLike","requestLikeCancel","fetchLike","Like","dispatch","postsId","state","post","postDetail","postLikeList","like","likeState","isLiked","setIsLiked","cookies","isLoggedIn","get","user","handleLike","e","alert","userId","accessToken","isLike","console","log"],"mappings":";;AAAA,SAASA,gBAAT,QAAiC,gBAAjC;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,eAA1B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SACEC,WADF,EAEEC,iBAFF,EAGEC,SAHF,QAIO,yBAJP;;;;AAMA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAcR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,UAAvB,CAA/B;AACA,QAAMC,YAAY,GAAGZ,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACI,IAAN,CAAWD,YAAvB,CAAhC;AACA,QAAME,SAAS,GAAGd,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACI,IAAN,CAAWE,OAAvB,CAA7B;AACA,QAAM,CAACA,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAACiB,SAAD,CAAtC;AACA,QAAMG,OAAO,GAAG,IAAIf,OAAJ,EAAhB;AACA,QAAMgB,UAAU,GAAGD,OAAO,CAACE,GAAR,CAAY,YAAZ,CAAnB;AACA,QAAMC,IAAI,GAAGH,OAAO,CAACE,GAAR,CAAY,MAAZ,CAAb;;AAEA,QAAME,UAAU,GAAIC,CAAD,IAAO;AACxB,QAAI,CAACJ,UAAL,EAAiB;AACfK,MAAAA,KAAK,CAAC,iBAAD,CAAL;AACA,aAAO,KAAP;AACD;;AACD,QAAI,CAACR,OAAL,EAAc;AACZR,MAAAA,QAAQ,CAACJ,WAAW,CAACK,OAAD,EAAUY,IAAI,CAACI,MAAf,CAAZ,CAAR;AACAR,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAHD,MAGO;AACLT,MAAAA,QAAQ,CAACH,iBAAiB,CAACI,OAAD,EAAUY,IAAI,CAACI,MAAf,EAAuBJ,IAAI,CAACK,WAA5B,CAAlB,CAAR;AACAT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAZD;;AAcA,QAAMU,MAAM,GAAG,MAAM;AACnBnB,IAAAA,QAAQ,CAACF,SAAS,CAACe,IAAI,CAACI,MAAN,EAAchB,OAAd,CAAV,CAAR;AACAmB,IAAAA,OAAO,CAACC,GAAR,CAAYd,SAAZ;AACD,GAHD;;AAKA,sBAAO;AAAA,cAAGY,MAAM;AAAT,mBAAP;AACD,CA9BD;;GAAMpB,I;UACaL,W,EACGD,W,EACCA,W,EACHA,W;;;KAJdM,I;AAgCN,eAAeA,IAAf","sourcesContent":["import { MdFavoriteBorder } from \"react-icons/md\";\nimport { MdFavorite } from \"react-icons/md\";\nimport react, { useState, useLayoutEffect } from \"react\";\nimport LikeStyled from \"../styled/modalStyled/LikeStyled\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Cookies from \"universal-cookie\";\nimport {\n  requestLike,\n  requestLikeCancel,\n  fetchLike,\n} from \"../../redux/module/like\";\n\nconst Like = () => {\n  const dispatch = useDispatch();\n  const { postsId } = useSelector((state) => state.post.postDetail);\n  const postLikeList = useSelector((state) => state.like.postLikeList);\n  const likeState = useSelector((state) => state.like.isLiked);\n  const [isLiked, setIsLiked] = useState(likeState);\n  const cookies = new Cookies();\n  const isLoggedIn = cookies.get(\"isLoggedIn\");\n  const user = cookies.get(\"user\");\n\n  const handleLike = (e) => {\n    if (!isLoggedIn) {\n      alert(\"로그인 후 이용가능 합니다.\");\n      return false;\n    }\n    if (!isLiked) {\n      dispatch(requestLike(postsId, user.userId));\n      setIsLiked(true);\n    } else {\n      dispatch(requestLikeCancel(postsId, user.userId, user.accessToken));\n      setIsLiked(false);\n    }\n  };\n\n  const isLike = () => {\n    dispatch(fetchLike(user.userId, postsId));\n    console.log(likeState);\n  };\n\n  return <>{isLike()}</>;\n};\n\nexport default Like;\n"]},"metadata":{},"sourceType":"module"}