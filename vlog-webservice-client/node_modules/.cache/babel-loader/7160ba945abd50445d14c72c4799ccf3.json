{"ast":null,"code":"import axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nconst cookies = new Cookies(); //actiontype\n\nconst LOGIN_REQUEST = \"LOGIN_REQUEST\";\nconst LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\nconst GET_CODE = \"GET_CODE\";\nconst SEND_CODE = \"SEND_CODE\";\nconst GET_PATH = \"GET_PATH\";\nconst DELETE_USER = \"DELETE_USER\"; // action\n\nexport const loginRequest = (path, authCode) => async dispatch => {\n  const response = await axios.get(`http://localhost:8080/api/v1/jwt/${path}`, {\n    params: {\n      code: authCode\n    }\n  });\n  cookies.set(\"user\", response.data, {\n    path: \"/\"\n  });\n  cookies.set(\"isLoggedIn\", true, {\n    path: \"/\"\n  });\n  dispatch({\n    type: LOGIN_REQUEST,\n    payload: response.data\n  });\n};\nexport const logoutRequset = userId => async dispatch => {\n  cookies.remove(\"isLoggedIn\");\n  cookies.remove(\"user\");\n  dispatch({\n    type: LOGOUT_REQUEST\n  });\n};\nexport const deleteUser = userId => async dispatch => {\n  const response = await axios.delete(`api/v1/user/${userId}`);\n  cookies.remove(\"isLoggedIn\");\n  cookies.remove(\"user\");\n  dispatch({\n    type: DELETE_USER\n  });\n};\nexport const getCode = code => dispatch => {\n  dispatch({\n    type: GET_CODE,\n    payload: code\n  });\n};\nexport const getPath = path => async dispatch => {\n  dispatch({\n    type: GET_PATH,\n    payload: path\n  });\n}; // initialState\n\nconst initialState = {\n  isLoggedIn: false,\n  user: {},\n  code: null,\n  path: \"\"\n};\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return { ...state,\n        isLoggedIn: true,\n        user: action.payload\n      };\n\n    case LOGOUT_REQUEST:\n      return { ...state,\n        isLoggedIn: false,\n        user: {}\n      };\n\n    case GET_CODE:\n      return { ...state,\n        code: action.payload\n      };\n\n    case GET_PATH:\n      return { ...state,\n        path: action.payload\n      };\n\n    case DELETE_USER:\n      return { ...state,\n        isLoggedIn: false,\n        user: {}\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/redux/module/login.js"],"names":["axios","Cookies","cookies","LOGIN_REQUEST","LOGOUT_REQUEST","GET_CODE","SEND_CODE","GET_PATH","DELETE_USER","loginRequest","path","authCode","dispatch","response","get","params","code","set","data","type","payload","logoutRequset","userId","remove","deleteUser","delete","getCode","getPath","initialState","isLoggedIn","user","reducer","state","action"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nconst cookies = new Cookies();\n//actiontype\n\nconst LOGIN_REQUEST = \"LOGIN_REQUEST\";\nconst LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\nconst GET_CODE = \"GET_CODE\";\nconst SEND_CODE = \"SEND_CODE\";\nconst GET_PATH = \"GET_PATH\";\nconst DELETE_USER = \"DELETE_USER\";\n// action\n\nexport const loginRequest = (path, authCode) => async (dispatch) => {\n  const response = await axios.get(`http://localhost:8080/api/v1/jwt/${path}`, {\n    params: {\n      code: authCode,\n    },\n  });\n  cookies.set(\"user\", response.data, { path: \"/\" });\n  cookies.set(\"isLoggedIn\", true, { path: \"/\" });\n\n  dispatch({ type: LOGIN_REQUEST, payload: response.data });\n};\n\nexport const logoutRequset = (userId) => async (dispatch) => {\n  cookies.remove(\"isLoggedIn\");\n  cookies.remove(\"user\");\n  dispatch({ type: LOGOUT_REQUEST });\n};\n\nexport const deleteUser = (userId) => async (dispatch) => {\n  const response = await axios.delete(`api/v1/user/${userId}`);\n  cookies.remove(\"isLoggedIn\");\n  cookies.remove(\"user\");\n  dispatch({ type: DELETE_USER });\n};\nexport const getCode = (code) => (dispatch) => {\n  dispatch({ type: GET_CODE, payload: code });\n};\n\nexport const getPath = (path) => async (dispatch) => {\n  dispatch({ type: GET_PATH, payload: path });\n};\n\n// initialState\n\nconst initialState = {\n  isLoggedIn: false,\n  user: {},\n  code: null,\n  path: \"\",\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return {\n        ...state,\n        isLoggedIn: true,\n        user: action.payload,\n      };\n    case LOGOUT_REQUEST:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: {},\n      };\n    case GET_CODE:\n      return {\n        ...state,\n        code: action.payload,\n      };\n    case GET_PATH:\n      return {\n        ...state,\n        path: action.payload,\n      };\n    case DELETE_USER:\n      return { ...state, isLoggedIn: false, user: {} };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}