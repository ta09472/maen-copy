{"ast":null,"code":"var _jsxFileName = \"/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/components/recent/RecentContent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchPost } from \"../../redux/module/post\";\nimport Post from \"../main/Post\";\nimport Loader from \"../main/Loader\";\nimport axios from \"axios\";\nimport { throttle } from \"lodash\";\nimport PostWrapperStyled from \"../styled/mainStyled/PostWrapperStyled\";\nimport TargetStyled from \"../styled/mainStyled/TargetStyled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RecentContent = () => {\n  _s();\n\n  const [lastId, setLastId] = useState(\"\");\n  const posts = useSelector(state => state.post.posts);\n  const dispatch = useDispatch();\n\n  const handleScroll = () => {\n    if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {\n      setLastId(posts[posts.length - 1].postsId);\n    } else {\n      console.log(\"not end\");\n    }\n  };\n\n  const infiniteScroll = throttle(handleScroll, 1000);\n  useEffect(() => {\n    dispatch(fetchPost());\n    window.addEventListener(\"scroll\", infiniteScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", infiniteScroll); //clean up\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PostWrapperStyled, {\n      children: posts.map((post, i) => {\n        return /*#__PURE__*/_jsxDEV(Post, {\n          post: post\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(RecentContent, \"asQX/EoiJ7JSpr8pduMiOCackdM=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = RecentContent;\nexport default RecentContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecentContent\");","map":{"version":3,"sources":["/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/components/recent/RecentContent.js"],"names":["React","useEffect","useState","useMemo","useSelector","useDispatch","fetchPost","Post","Loader","axios","throttle","PostWrapperStyled","TargetStyled","RecentContent","lastId","setLastId","posts","state","post","dispatch","handleScroll","window","innerHeight","scrollY","document","body","offsetHeight","length","postsId","console","log","infiniteScroll","addEventListener","removeEventListener","map","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,OAArC,QAAoD,OAApD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;AACA,OAAOC,YAAP,MAAyB,mCAAzB;;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMc,KAAK,GAAGZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,KAAvB,CAAzB;AACA,QAAMG,QAAQ,GAAGd,WAAW,EAA5B;;AAEA,QAAMe,YAAY,GAAG,MAAM;AACzB,QAAIC,MAAM,CAACC,WAAP,GAAqBD,MAAM,CAACE,OAA5B,IAAuCC,QAAQ,CAACC,IAAT,CAAcC,YAAzD,EAAuE;AACrEX,MAAAA,SAAS,CAACC,KAAK,CAACA,KAAK,CAACW,MAAN,GAAe,CAAhB,CAAL,CAAwBC,OAAzB,CAAT;AACD,KAFD,MAEO;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;AACF,GAND;;AAOA,QAAMC,cAAc,GAAGrB,QAAQ,CAACU,YAAD,EAAe,IAAf,CAA/B;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,QAAQ,CAACb,SAAS,EAAV,CAAR;AACAe,IAAAA,MAAM,CAACW,gBAAP,CAAwB,QAAxB,EAAkCD,cAAlC;AAEA,WAAO,MAAM;AACXV,MAAAA,MAAM,CAACY,mBAAP,CAA2B,QAA3B,EAAqCF,cAArC,EADW,CAC2C;AACvD,KAFD;AAGD,GAPQ,EAON,EAPM,CAAT;AASA,sBACE;AAAA,2BACE,QAAC,iBAAD;AAAA,gBACGf,KAAK,CAACkB,GAAN,CAAU,CAAChB,IAAD,EAAOiB,CAAP,KAAa;AACtB,4BAAO,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEjB;AAAZ,WAAuBiB,CAAvB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AASD,CAhCD;;GAAMtB,a;UAEUT,W,EACGC,W;;;KAHbQ,a;AAkCN,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchPost } from \"../../redux/module/post\";\nimport Post from \"../main/Post\";\nimport Loader from \"../main/Loader\";\nimport axios from \"axios\";\nimport { throttle } from \"lodash\";\nimport PostWrapperStyled from \"../styled/mainStyled/PostWrapperStyled\";\nimport TargetStyled from \"../styled/mainStyled/TargetStyled\";\n\nconst RecentContent = () => {\n  const [lastId, setLastId] = useState(\"\");\n  const posts = useSelector((state) => state.post.posts);\n  const dispatch = useDispatch();\n\n  const handleScroll = () => {\n    if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {\n      setLastId(posts[posts.length - 1].postsId);\n    } else {\n      console.log(\"not end\");\n    }\n  };\n  const infiniteScroll = throttle(handleScroll, 1000);\n\n  useEffect(() => {\n    dispatch(fetchPost());\n    window.addEventListener(\"scroll\", infiniteScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", infiniteScroll); //clean up\n    };\n  }, []);\n\n  return (\n    <>\n      <PostWrapperStyled>\n        {posts.map((post, i) => {\n          return <Post post={post} key={i} />;\n        })}\n      </PostWrapperStyled>\n    </>\n  );\n};\n\nexport default RecentContent;\n"]},"metadata":{},"sourceType":"module"}