{"ast":null,"code":"import axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nconst cookies = new Cookies();\n\nconst expireToken = async (url, method) => {\n  const accessToken = cookies.get(\"user\").accessToken;\n  const refreshToken = cookies.get(\"user\").refreshToken;\n  const config = {\n    headers: {\n      ACCESS_TOKEN: accessToken\n    }\n  };\n  const validation = await axios.get(\"http://localhost:8080/api/v1/jwt/expired\").data;\n\n  if (validation) {\n    switch (method) {\n      case \"delete\":\n        const response = axios.delete(url, config);\n        console.log(response);\n    }\n  } else {\n    const response = await axios.get(\"http://localhost:8080/api/v1/jwt/refresh\", {\n      headers: {\n        REFRESH_TOKEN: refreshToken\n      }\n    });\n    let copied = cookies.get(\"user\");\n    copied.refreshToken = response.headers.refresh_token;\n    copied.accessToken = response.headers.access_token;\n    cookies.set(\"user\", copied, {\n      path: \"/\"\n    });\n  }\n};\n\nexport default expireToken;","map":{"version":3,"sources":["/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/utils/expireToken.js"],"names":["axios","Cookies","cookies","expireToken","url","method","accessToken","get","refreshToken","config","headers","ACCESS_TOKEN","validation","data","response","delete","console","log","REFRESH_TOKEN","copied","refresh_token","access_token","set","path"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,MAAMC,OAAO,GAAG,IAAID,OAAJ,EAAhB;;AAEA,MAAME,WAAW,GAAG,OAAOC,GAAP,EAAYC,MAAZ,KAAuB;AACzC,QAAMC,WAAW,GAAGJ,OAAO,CAACK,GAAR,CAAY,MAAZ,EAAoBD,WAAxC;AACA,QAAME,YAAY,GAAGN,OAAO,CAACK,GAAR,CAAY,MAAZ,EAAoBC,YAAzC;AACA,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACPC,MAAAA,YAAY,EAAEL;AADP;AADI,GAAf;AAKA,QAAMM,UAAU,GAAG,MAAMZ,KAAK,CAACO,GAAN,CAAU,0CAAV,EACtBM,IADH;;AAEA,MAAID,UAAJ,EAAgB;AACd,YAAQP,MAAR;AACE,WAAK,QAAL;AACE,cAAMS,QAAQ,GAAGd,KAAK,CAACe,MAAN,CAAaX,GAAb,EAAkBK,MAAlB,CAAjB;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AAHJ;AAKD,GAND,MAMO;AACL,UAAMA,QAAQ,GAAG,MAAMd,KAAK,CAACO,GAAN,CACrB,0CADqB,EAErB;AACEG,MAAAA,OAAO,EAAE;AACPQ,QAAAA,aAAa,EAAEV;AADR;AADX,KAFqB,CAAvB;AAQA,QAAIW,MAAM,GAAGjB,OAAO,CAACK,GAAR,CAAY,MAAZ,CAAb;AACAY,IAAAA,MAAM,CAACX,YAAP,GAAsBM,QAAQ,CAACJ,OAAT,CAAiBU,aAAvC;AACAD,IAAAA,MAAM,CAACb,WAAP,GAAqBQ,QAAQ,CAACJ,OAAT,CAAiBW,YAAtC;AACAnB,IAAAA,OAAO,CAACoB,GAAR,CAAY,MAAZ,EAAoBH,MAApB,EAA4B;AAAEI,MAAAA,IAAI,EAAE;AAAR,KAA5B;AACD;AACF,CA9BD;;AAgCA,eAAepB,WAAf","sourcesContent":["import axios from \"axios\";\nimport Cookies from \"universal-cookie\";\n\nconst cookies = new Cookies();\n\nconst expireToken = async (url, method) => {\n  const accessToken = cookies.get(\"user\").accessToken;\n  const refreshToken = cookies.get(\"user\").refreshToken;\n  const config = {\n    headers: {\n      ACCESS_TOKEN: accessToken,\n    },\n  };\n  const validation = await axios.get(\"http://localhost:8080/api/v1/jwt/expired\")\n    .data;\n  if (validation) {\n    switch (method) {\n      case \"delete\":\n        const response = axios.delete(url, config);\n        console.log(response);\n    }\n  } else {\n    const response = await axios.get(\n      \"http://localhost:8080/api/v1/jwt/refresh\",\n      {\n        headers: {\n          REFRESH_TOKEN: refreshToken,\n        },\n      }\n    );\n    let copied = cookies.get(\"user\");\n    copied.refreshToken = response.headers.refresh_token;\n    copied.accessToken = response.headers.access_token;\n    cookies.set(\"user\", copied, { path: \"/\" });\n  }\n};\n\nexport default expireToken;\n"]},"metadata":{},"sourceType":"module"}