{"ast":null,"code":"var _jsxFileName = \"/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/components/channel/ChannelInfoWrapper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport ChannelInfoStyled from \"../styled/channelStyled/ChannelInfoStyled\";\nimport UserProfileStyled from \"../styled/commonStyled/UserProfileStyled\";\nimport ChannelDetaillWrapper from \"../styled/channelStyled/ChannelDetaillWrapper\";\nimport UserName from \"../common/UserName\";\nimport ChannelProfile from \"./ChannelProfile\";\nimport ChannelDescription from \"../channel/ChannelDescription\";\nimport Cookies from \"universal-cookie\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FollowButton from \"../styled/commonStyled/FollowButton\";\nimport { setFollow, getFollowing } from \"../../redux/module/follow\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChannelInfoWrapper = () => {\n  _s();\n\n  const channel = useSelector(state => state.channel.channelData);\n  const isFollowed = useSelector(state => state.channel.isFollowed);\n  const cookies = new Cookies();\n  const dispatch = useDispatch();\n\n  const handleFollow = () => {\n    const userId = cookies.get(\"user\").userId;\n    dispatch(getFollowing(userId));\n    dispatch(setFollow(userId, channel.userId));\n  };\n\n  const compareFollow = async () => {\n    if (cookies.get(\"isLoggedIn\")) {\n      const response = await axios.get(`/api/v1/user/${cookies.get(user).userId}/following`);\n      let isFollowed;\n      response.data.forEach(element => {\n        if (element.userId === userId) {\n          isFollowed = true;\n          return;\n        }\n      });\n      console.log(isFollowed);\n    }\n  };\n\n  useEffect(() => {\n    compareLike();\n  }, [postsId]);\n  return /*#__PURE__*/_jsxDEV(ChannelInfoStyled, {\n    children: [/*#__PURE__*/_jsxDEV(ChannelProfile, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChannelDetaillWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: channel.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChannelDescription, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), isFollowed ? /*#__PURE__*/_jsxDEV(FollowButton, {\n      children: \"Unfollow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(FollowButton, {\n      onClick: handleFollow,\n      children: \"Follow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChannelInfoWrapper, \"MezeJRN9ZjbgJ7vuvvfrJbLLHgk=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = ChannelInfoWrapper;\nexport default ChannelInfoWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChannelInfoWrapper\");","map":{"version":3,"sources":["/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/components/channel/ChannelInfoWrapper.js"],"names":["React","useState","useEffect","ChannelInfoStyled","UserProfileStyled","ChannelDetaillWrapper","UserName","ChannelProfile","ChannelDescription","Cookies","useParams","useDispatch","useSelector","FollowButton","setFollow","getFollowing","axios","ChannelInfoWrapper","channel","state","channelData","isFollowed","cookies","dispatch","handleFollow","userId","get","compareFollow","response","user","data","forEach","element","console","log","compareLike","postsId","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,iBAAP,MAA8B,2CAA9B;AACA,OAAOC,iBAAP,MAA8B,0CAA9B;AACA,OAAOC,qBAAP,MAAkC,+CAAlC;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,kBAAP,MAA+B,+BAA/B;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,2BAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,kBAAkB,GAAG,MAAM;AAAA;;AAC/B,QAAMC,OAAO,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,OAAN,CAAcE,WAA1B,CAA3B;AACA,QAAMC,UAAU,GAAGT,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,OAAN,CAAcG,UAA1B,CAA9B;AACA,QAAMC,OAAO,GAAG,IAAIb,OAAJ,EAAhB;AACA,QAAMc,QAAQ,GAAGZ,WAAW,EAA5B;;AAEA,QAAMa,YAAY,GAAG,MAAM;AACzB,UAAMC,MAAM,GAAGH,OAAO,CAACI,GAAR,CAAY,MAAZ,EAAoBD,MAAnC;AACAF,IAAAA,QAAQ,CAACR,YAAY,CAACU,MAAD,CAAb,CAAR;AACAF,IAAAA,QAAQ,CAACT,SAAS,CAACW,MAAD,EAASP,OAAO,CAACO,MAAjB,CAAV,CAAR;AACD,GAJD;;AAKA,QAAME,aAAa,GAAG,YAAY;AAChC,QAAIL,OAAO,CAACI,GAAR,CAAY,YAAZ,CAAJ,EAA+B;AAC7B,YAAME,QAAQ,GAAG,MAAMZ,KAAK,CAACU,GAAN,CACpB,gBAAeJ,OAAO,CAACI,GAAR,CAAYG,IAAZ,EAAkBJ,MAAO,YADpB,CAAvB;AAGA,UAAIJ,UAAJ;AACAO,MAAAA,QAAQ,CAACE,IAAT,CAAcC,OAAd,CAAuBC,OAAD,IAAa;AACjC,YAAIA,OAAO,CAACP,MAAR,KAAmBA,MAAvB,EAA+B;AAC7BJ,UAAAA,UAAU,GAAG,IAAb;AACA;AACD;AACF,OALD;AAMAY,MAAAA,OAAO,CAACC,GAAR,CAAYb,UAAZ;AACD;AACF,GAdD;;AAgBAnB,EAAAA,SAAS,CAAC,MAAM;AACdiC,IAAAA,WAAW;AACZ,GAFQ,EAEN,CAACC,OAAD,CAFM,CAAT;AAIA,sBACE,QAAC,iBAAD;AAAA,4BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,qBAAD;AAAA,8BACE;AAAA,kBAAKlB,OAAO,CAACmB;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAMGhB,UAAU,gBACT,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADS,gBAGT,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEG,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA7CD;;GAAMP,kB;UACYL,W,EACGA,W,EAEFD,W;;;KAJbM,kB;AA+CN,eAAeA,kBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ChannelInfoStyled from \"../styled/channelStyled/ChannelInfoStyled\";\nimport UserProfileStyled from \"../styled/commonStyled/UserProfileStyled\";\nimport ChannelDetaillWrapper from \"../styled/channelStyled/ChannelDetaillWrapper\";\nimport UserName from \"../common/UserName\";\nimport ChannelProfile from \"./ChannelProfile\";\nimport ChannelDescription from \"../channel/ChannelDescription\";\nimport Cookies from \"universal-cookie\";\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport FollowButton from \"../styled/commonStyled/FollowButton\";\nimport { setFollow, getFollowing } from \"../../redux/module/follow\";\nimport axios from \"axios\";\nconst ChannelInfoWrapper = () => {\n  const channel = useSelector((state) => state.channel.channelData);\n  const isFollowed = useSelector((state) => state.channel.isFollowed);\n  const cookies = new Cookies();\n  const dispatch = useDispatch();\n\n  const handleFollow = () => {\n    const userId = cookies.get(\"user\").userId;\n    dispatch(getFollowing(userId));\n    dispatch(setFollow(userId, channel.userId));\n  };\n  const compareFollow = async () => {\n    if (cookies.get(\"isLoggedIn\")) {\n      const response = await axios.get(\n        `/api/v1/user/${cookies.get(user).userId}/following`\n      );\n      let isFollowed;\n      response.data.forEach((element) => {\n        if (element.userId === userId) {\n          isFollowed = true;\n          return;\n        }\n      });\n      console.log(isFollowed);\n    }\n  };\n\n  useEffect(() => {\n    compareLike();\n  }, [postsId]);\n\n  return (\n    <ChannelInfoStyled>\n      <ChannelProfile />\n      <ChannelDetaillWrapper>\n        <h2>{channel.name}</h2>\n        <ChannelDescription />\n      </ChannelDetaillWrapper>\n      {isFollowed ? (\n        <FollowButton>Unfollow</FollowButton>\n      ) : (\n        <FollowButton onClick={handleFollow}>Follow</FollowButton>\n      )}\n    </ChannelInfoStyled>\n  );\n};\n\nexport default ChannelInfoWrapper;\n"]},"metadata":{},"sourceType":"module"}