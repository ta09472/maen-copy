{"ast":null,"code":"var _jsxFileName = \"/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/components/main/Content.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchPost, fetchPostPopular } from \"../../redux/module/post\";\nimport Post from \"./Post\";\nimport Loader from \"./Loader\";\nimport TargetStyled from \"../styled/mainStyled/TargetStyled\";\nimport PostWrapperStyled from \"../styled/mainStyled/PostWrapperStyled\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Content = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.post.posts);\n  const [target, setTarget] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [itemLists, setItemLists] = useState([]);\n  const [isEnd, setIsEnd] = useState(false);\n  const [pageNum, setPageNum] = useState(0);\n  const pageEnd = useRef();\n\n  const getMoreItem = async () => {\n    dispatch(fetchPostPopular(pageNum));\n    let items = posts;\n    setItemLists(itemLists => itemLists.concat(posts));\n    setIsLoaded(true);\n  };\n\n  const loadMore = () => {\n    setPageNum(prevPageNum => prevPageNum + 1);\n  };\n\n  useEffect(() => {\n    getMoreItem(pageNum);\n  }, [pageNum]);\n  useEffect(async () => {\n    if (isLoaded) {\n      const observer = await new IntersectionObserver(entries => {\n        if (entries[0].isIntersecting) {\n          loadMore();\n        }\n      }, {\n        threshold: 1\n      });\n      observer.observe(pageEnd.current);\n    }\n  }, [isLoaded]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PostWrapperStyled, {\n      children: itemLists.map((post, i) => {\n        return /*#__PURE__*/_jsxDEV(Post, {\n          post: post\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), isEnd && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB9C8\\uC9C0\\uB9C9 \\uAC8C\\uC2DC\\uBB3C\\uC785\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), !isEnd && /*#__PURE__*/_jsxDEV(TargetStyled, {\n      ref: pageEnd,\n      children: isLoaded && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 50\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Content, \"bJqSMutys7IiKKfueBBlA8hbS1s=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Content;\nexport default Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/components/main/Content.js"],"names":["React","useEffect","useState","useRef","useSelector","useDispatch","fetchPost","fetchPostPopular","Post","Loader","TargetStyled","PostWrapperStyled","axios","Content","dispatch","posts","state","post","target","setTarget","isLoaded","setIsLoaded","itemLists","setItemLists","isEnd","setIsEnd","pageNum","setPageNum","pageEnd","getMoreItem","items","concat","loadMore","prevPageNum","observer","IntersectionObserver","entries","isIntersecting","threshold","observe","current","map","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchPost, fetchPostPopular } from \"../../redux/module/post\";\nimport Post from \"./Post\";\nimport Loader from \"./Loader\";\nimport TargetStyled from \"../styled/mainStyled/TargetStyled\";\nimport PostWrapperStyled from \"../styled/mainStyled/PostWrapperStyled\";\nimport axios from \"axios\";\nconst Content = () => {\n  const dispatch = useDispatch();\n  const posts = useSelector((state) => state.post.posts);\n  const [target, setTarget] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [itemLists, setItemLists] = useState([]);\n  const [isEnd, setIsEnd] = useState(false);\n  const [pageNum, setPageNum] = useState(0);\n  const pageEnd = useRef();\n\n  const getMoreItem = async () => {\n    dispatch(fetchPostPopular(pageNum));\n\n    let items = posts;\n    setItemLists((itemLists) => itemLists.concat(posts));\n    setIsLoaded(true);\n  };\n\n  const loadMore = () => {\n    setPageNum((prevPageNum) => prevPageNum + 1);\n  };\n\n  useEffect(() => {\n    getMoreItem(pageNum);\n  }, [pageNum]);\n\n  useEffect(async () => {\n    if (isLoaded) {\n      const observer = await new IntersectionObserver(\n        (entries) => {\n          if (entries[0].isIntersecting) {\n            loadMore();\n          }\n        },\n        { threshold: 1 }\n      );\n      observer.observe(pageEnd.current);\n    }\n  }, [isLoaded]);\n\n  return (\n    <>\n      <PostWrapperStyled>\n        {itemLists.map((post, i) => {\n          return <Post post={post} key={i} />;\n        })}\n      </PostWrapperStyled>\n      {isEnd && <div>마지막 게시물입니다.</div>}\n      {!isEnd && (\n        <TargetStyled ref={pageEnd}>{isLoaded && <Loader />}</TargetStyled>\n      )}\n    </>\n  );\n};\n\nexport default Content;\n"]},"metadata":{},"sourceType":"module"}