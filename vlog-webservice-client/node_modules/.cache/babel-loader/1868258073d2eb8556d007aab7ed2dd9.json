{"ast":null,"code":"var _jsxFileName = \"/Users/beomsukim/2022/MAEN-client-master/src/components/main/Post.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport PostStyled from \"../styled/mainStyled/PostStyled\";\nimport UserBlock from \"../common/UserBlock\";\nimport VideoModal from \"../videoModal/VideoModal\";\nimport Modal from \"react-modal\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { MdFavorite } from \"react-icons/md\";\nimport { MdPlayArrow } from \"react-icons/md\";\nimport { toggleModal } from \"../../redux/module/post\";\nimport ContentInfo from \"../videoModal/ContentInfo\";\nimport axios from \"axios\";\nimport { fetchDetailPost } from \"../../redux/module/post\";\nimport UserBlockStlyed from \"../styled/commonStyled/UserBlockStyled\";\nimport UserProfileStyled from \"../styled/commonStyled/UserProfileStyled\";\nimport ThumbnailWrapper from \"../styled/mainStyled/ThumbnailWrapper\";\nimport { fetchComments } from \"../../redux/module/comment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Post = _ref => {\n  _s();\n\n  let {\n    post\n  } = _ref;\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const postDetail = useSelector(state => state.post.postDetail);\n  const dispatch = useDispatch();\n\n  const toggleModal = () => {\n    const postId = post.postsId;\n    setIsModalOpen(!isModalOpen);\n    dispatch(fetchDetailPost(postId));\n    dispatch(fetchComments(`${postId}`));\n    document.body.style.overflow = \"auto\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PostStyled, {\n      onClick: toggleModal,\n      children: [/*#__PURE__*/_jsxDEV(ThumbnailWrapper, {\n        width: \"100%\",\n        height: \"80%\",\n        src: `http://localhost:8080/api/v1/posts/thumbnail/${post.thumbnailName}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserBlockStlyed, {\n        children: [/*#__PURE__*/_jsxDEV(UserProfileStyled, {\n          width: \"32px\",\n          height: \"32px\",\n          src: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.authorName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MdFavorite, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), \" :\", post.postsLike, /*#__PURE__*/_jsxDEV(MdPlayArrow, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), \" : \", post.views, postDetail.postTags]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(VideoModal, {\n      isOpened: isModalOpen,\n      onClose: toggleModal,\n      videoSrc: post.thumbnailName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Post, \"m3jHjkl5NTpodg9i/pZUJr0+vNs=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/beomsukim/2022/MAEN-client-master/src/components/main/Post.js"],"names":["React","useState","useEffect","PostStyled","UserBlock","VideoModal","Modal","useSelector","useDispatch","MdFavorite","MdPlayArrow","toggleModal","ContentInfo","axios","fetchDetailPost","UserBlockStlyed","UserProfileStyled","ThumbnailWrapper","fetchComments","Post","post","isModalOpen","setIsModalOpen","postDetail","state","dispatch","postId","postsId","document","body","style","overflow","thumbnailName","authorName","postsLike","views","postTags"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,OAAOC,eAAP,MAA4B,wCAA5B;AACA,OAAOC,iBAAP,MAA8B,0CAA9B;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;AAEA,SAASC,aAAT,QAA8B,4BAA9B;;;;AACA,MAAMC,IAAI,GAAG,QAAc;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AACzB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAMsB,UAAU,GAAGhB,WAAW,CAAEiB,KAAD,IAAWA,KAAK,CAACJ,IAAN,CAAWG,UAAvB,CAA9B;AACA,QAAME,QAAQ,GAAGjB,WAAW,EAA5B;;AAEA,QAAMG,WAAW,GAAG,MAAM;AACxB,UAAMe,MAAM,GAAGN,IAAI,CAACO,OAApB;AACAL,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACAI,IAAAA,QAAQ,CAACX,eAAe,CAACY,MAAD,CAAhB,CAAR;AACAD,IAAAA,QAAQ,CAACP,aAAa,CAAE,GAAEQ,MAAO,EAAX,CAAd,CAAR;AACAE,IAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,QAApB,GAA+B,MAA/B;AACD,GAND;;AAQA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEpB,WAArB;AAAA,8BACE,QAAC,gBAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,MAAM,EAAC,KAFT;AAGE,QAAA,GAAG,EAAG,gDAA+CS,IAAI,CAACY,aAAc;AAH1E;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,eAAD;AAAA,gCACE,QAAC,iBAAD;AAAmB,UAAA,KAAK,EAAC,MAAzB;AAAgC,UAAA,MAAM,EAAC,MAAvC;AAA8C,UAAA,GAAG,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAIZ,IAAI,CAACa;AAAT;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAUE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAVF,QAUmBb,IAAI,CAACc,SAVxB,eAWE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAXF,SAWqBd,IAAI,CAACe,KAX1B,EAYGZ,UAAU,CAACa,QAZd;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE,QAAC,UAAD;AACE,MAAA,QAAQ,EAAEf,WADZ;AAEE,MAAA,OAAO,EAAEV,WAFX;AAGE,MAAA,QAAQ,EAAES,IAAI,CAACY;AAHjB;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA,kBADF;AAwBD,CArCD;;GAAMb,I;UAEeZ,W,EACFC,W;;;KAHbW,I;AAuCN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PostStyled from \"../styled/mainStyled/PostStyled\";\nimport UserBlock from \"../common/UserBlock\";\nimport VideoModal from \"../videoModal/VideoModal\";\nimport Modal from \"react-modal\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { MdFavorite } from \"react-icons/md\";\nimport { MdPlayArrow } from \"react-icons/md\";\nimport { toggleModal } from \"../../redux/module/post\";\nimport ContentInfo from \"../videoModal/ContentInfo\";\nimport axios from \"axios\";\nimport { fetchDetailPost } from \"../../redux/module/post\";\nimport UserBlockStlyed from \"../styled/commonStyled/UserBlockStyled\";\nimport UserProfileStyled from \"../styled/commonStyled/UserProfileStyled\";\nimport ThumbnailWrapper from \"../styled/mainStyled/ThumbnailWrapper\";\n\nimport { fetchComments } from \"../../redux/module/comment\";\nconst Post = ({ post }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const postDetail = useSelector((state) => state.post.postDetail);\n  const dispatch = useDispatch();\n\n  const toggleModal = () => {\n    const postId = post.postsId;\n    setIsModalOpen(!isModalOpen);\n    dispatch(fetchDetailPost(postId));\n    dispatch(fetchComments(`${postId}`));\n    document.body.style.overflow = \"auto\";\n  };\n\n  return (\n    <>\n      <PostStyled onClick={toggleModal}>\n        <ThumbnailWrapper\n          width=\"100%\"\n          height=\"80%\"\n          src={`http://localhost:8080/api/v1/posts/thumbnail/${post.thumbnailName}`}\n        />\n        <UserBlockStlyed>\n          <UserProfileStyled width=\"32px\" height=\"32px\" src=\"\" />\n          <p>{post.authorName}</p>\n        </UserBlockStlyed>\n        <MdFavorite /> :{post.postsLike}\n        <MdPlayArrow /> : {post.views}\n        {postDetail.postTags}\n      </PostStyled>\n\n      <VideoModal\n        isOpened={isModalOpen}\n        onClose={toggleModal}\n        videoSrc={post.thumbnailName}\n      ></VideoModal>\n    </>\n  );\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}