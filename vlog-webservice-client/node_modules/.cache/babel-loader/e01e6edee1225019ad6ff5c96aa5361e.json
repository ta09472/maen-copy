{"ast":null,"code":"import axios from \"axios\"; //actiontype\n\nconst LOGIN_REQUEST = \"LOGIN_REQUEST\";\nconst LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\nconst GET_CODE = \"GET_CODE\";\nconst SEND_CODE = \"SEND_CODE\"; // action\n\nexport const loginRequest = user => async dispatch => {\n  /*const response = await axios.get(\"url\");  */\n  dispatch({\n    type: LOGIN_REQUEST\n  });\n};\nexport const logoutRequset = user => async dispatch => {\n  const response = await axios.post(\"url\", user);\n  dispatch({\n    type: LOGOUT_REQUEST\n  });\n};\nexport const getCode = code => dispatch => {\n  dispatch({\n    type: GET_CODE,\n    payload: code\n  });\n};\nexport const sendCode = code => async dispatch => {\n  const response = await axios.get(\"\", code);\n  dispatch({\n    type: SEND_CODE,\n    payload: response.data\n  });\n}; // initialState\n\nconst initialState = {\n  isLoggedIn: false,\n  user: {},\n  code: null\n};\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return { ...state,\n        isLoggedIn: true\n      };\n\n    case LOGOUT_REQUEST:\n      return { ...state,\n        isLoggedIn: false,\n        user: {}\n      };\n\n    case GET_CODE:\n      return { ...state,\n        code: action.payload\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/redux/module/login.js"],"names":["axios","LOGIN_REQUEST","LOGOUT_REQUEST","GET_CODE","SEND_CODE","loginRequest","user","dispatch","type","logoutRequset","response","post","getCode","code","payload","sendCode","get","data","initialState","isLoggedIn","reducer","state","action"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,cAAc,GAAG,gBAAvB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB,C,CACA;;AAEA,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU,MAAOC,QAAP,IAAoB;AACxD;AACAA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEP;AAAR,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMQ,aAAa,GAAIH,IAAD,IAAU,MAAOC,QAAP,IAAoB;AACzD,QAAMG,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAW,KAAX,EAAkBL,IAAlB,CAAvB;AACAC,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEN;AAAR,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMU,OAAO,GAAIC,IAAD,IAAWN,QAAD,IAAc;AAC7CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL,QAAR;AAAkBW,IAAAA,OAAO,EAAED;AAA3B,GAAD,CAAR;AACD,CAFM;AAIP,OAAO,MAAME,QAAQ,GAAIF,IAAD,IAAU,MAAON,QAAP,IAAoB;AACpD,QAAMG,QAAQ,GAAG,MAAMV,KAAK,CAACgB,GAAN,CAAU,EAAV,EAAcH,IAAd,CAAvB;AACAN,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEJ,SAAR;AAAmBU,IAAAA,OAAO,EAAEJ,QAAQ,CAACO;AAArC,GAAD,CAAR;AACD,CAHM,C,CAIP;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,KADO;AAEnBb,EAAAA,IAAI,EAAE,EAFa;AAGnBO,EAAAA,IAAI,EAAE;AAHa,CAArB;AAMA,eAAe,SAASO,OAAT,GAA+C;AAAA,MAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,MAARI,MAAQ;;AAC5D,UAAQA,MAAM,CAACd,IAAf;AACE,SAAKP,aAAL;AACE,aAAO,EACL,GAAGoB,KADE;AAELF,QAAAA,UAAU,EAAE;AAFP,OAAP;;AAIF,SAAKjB,cAAL;AACE,aAAO,EACL,GAAGmB,KADE;AAELF,QAAAA,UAAU,EAAE,KAFP;AAGLb,QAAAA,IAAI,EAAE;AAHD,OAAP;;AAKF,SAAKH,QAAL;AACE,aAAO,EACL,GAAGkB,KADE;AAELR,QAAAA,IAAI,EAAES,MAAM,CAACR;AAFR,OAAP;;AAIF;AACE,aAAOO,KAAP;AAlBJ;AAoBD","sourcesContent":["import axios from \"axios\";\n//actiontype\n\nconst LOGIN_REQUEST = \"LOGIN_REQUEST\";\nconst LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\nconst GET_CODE = \"GET_CODE\";\nconst SEND_CODE = \"SEND_CODE\";\n// action\n\nexport const loginRequest = (user) => async (dispatch) => {\n  /*const response = await axios.get(\"url\");  */\n  dispatch({ type: LOGIN_REQUEST });\n};\n\nexport const logoutRequset = (user) => async (dispatch) => {\n  const response = await axios.post(\"url\", user);\n  dispatch({ type: LOGOUT_REQUEST });\n};\n\nexport const getCode = (code) => (dispatch) => {\n  dispatch({ type: GET_CODE, payload: code });\n};\n\nexport const sendCode = (code) => async (dispatch) => {\n  const response = await axios.get(\"\", code);\n  dispatch({ type: SEND_CODE, payload: response.data });\n};\n// initialState\n\nconst initialState = {\n  isLoggedIn: false,\n  user: {},\n  code: null,\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return {\n        ...state,\n        isLoggedIn: true,\n      };\n    case LOGOUT_REQUEST:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: {},\n      };\n    case GET_CODE:\n      return {\n        ...state,\n        code: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}