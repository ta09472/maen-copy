{"ast":null,"code":"import axios from \"axios\"; //actiontype\n\nconst LOGIN_REQUEST = \"LOGIN_REQUEST\";\nconst LOGOUT_REQUEST = \"LOGOUT_REQUEST\"; // action\n\nexport const loginRequest = (user, isLoggedIn) => async dispatch => {\n  const response = await axios.get(\"url\");\n  dispatch({\n    type: LOGIN_REQUEST,\n    payload: response.data\n  });\n};\nexport const logoutRequset = user => async dispatch => {\n  const response = await axios.post(\"url\", user);\n  dispatch({\n    type: LOGOUT_REQUEST\n  });\n}; // initialState\n\nconst initialState = {\n  isLoggedIn: false,\n  user: {}\n};\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return { ...state,\n        isLoggedIn: true,\n        user: action.payload\n      };\n\n    case LOGOUT_REQUEST:\n      return { ...state,\n        isLoggedIn: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/redux/module/login.js"],"names":["axios","LOGIN_REQUEST","LOGOUT_REQUEST","loginRequest","user","isLoggedIn","dispatch","response","get","type","payload","data","logoutRequset","post","initialState","reducer","state","action"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,cAAc,GAAG,gBAAvB,C,CAEA;;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,IAAD,EAAOC,UAAP,KAAsB,MAAOC,QAAP,IAAoB;AACpE,QAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,KAAV,CAAvB;AACAF,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAER,aAAR;AAAuBS,IAAAA,OAAO,EAAEH,QAAQ,CAACI;AAAzC,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMC,aAAa,GAAIR,IAAD,IAAU,MAAOE,QAAP,IAAoB;AACzD,QAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACa,IAAN,CAAW,KAAX,EAAkBT,IAAlB,CAAvB;AACAE,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEP;AAAR,GAAD,CAAR;AACD,CAHM,C,CAIP;;AAEA,MAAMY,YAAY,GAAG;AACnBT,EAAAA,UAAU,EAAE,KADO;AAEnBD,EAAAA,IAAI,EAAE;AAFa,CAArB;AAKA,eAAe,SAASW,OAAT,GAA+C;AAAA,MAA9BC,KAA8B,uEAAtBF,YAAsB;AAAA,MAARG,MAAQ;;AAC5D,UAAQA,MAAM,CAACR,IAAf;AACE,SAAKR,aAAL;AACE,aAAO,EACL,GAAGe,KADE;AAELX,QAAAA,UAAU,EAAE,IAFP;AAGLD,QAAAA,IAAI,EAAEa,MAAM,CAACP;AAHR,OAAP;;AAKF,SAAKR,cAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELX,QAAAA,UAAU,EAAE;AAFP,OAAP;;AAIF;AACE,aAAOW,KAAP;AAbJ;AAeD","sourcesContent":["import axios from \"axios\";\n//actiontype\n\nconst LOGIN_REQUEST = \"LOGIN_REQUEST\";\nconst LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\n\n// action\n\nexport const loginRequest = (user, isLoggedIn) => async (dispatch) => {\n  const response = await axios.get(\"url\");\n  dispatch({ type: LOGIN_REQUEST, payload: response.data });\n};\n\nexport const logoutRequset = (user) => async (dispatch) => {\n  const response = await axios.post(\"url\", user);\n  dispatch({ type: LOGOUT_REQUEST });\n};\n// initialState\n\nconst initialState = {\n  isLoggedIn: false,\n  user: {},\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return {\n        ...state,\n        isLoggedIn: true,\n        user: action.payload,\n      };\n    case LOGOUT_REQUEST:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}