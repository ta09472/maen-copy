{"ast":null,"code":"import axios from \"axios\";\nimport expireToken from \"../../utils/expireToken\";\nimport Cookies from \"universal-cookie\";\nconst cookies = new Cookies(); // actiontype\n\nconst REQUEST_LIKE = \"REQUEST_LIKE\";\nconst REQUEST_LIKE_CANCEL = \"REQUEST_LIKE_CANCEL\";\nconst FETCH_LIKE = \"FETCH_LIKE\"; //action\n\nexport const requestLike = (postsId, userId) => dispatch => {\n  let data = {\n    postsId: postsId,\n    userId: userId\n  };\n  expireToken();\n  const response = axios.post(\"/api/v1/post-like\", data, {\n    headers: {\n      ACCESS_TOKEN: cookies.get(\"user\").accessToken\n    }\n  });\n  dispatch({\n    type: REQUEST_LIKE\n  });\n};\nexport const requestLikeCancel = (postsId, userId, accessToken) => dispatch => {\n  axios.delete(`http://localhost:8080/api/v1/post-like/${postsId}/${userId}`);\n  dispatch({\n    type: REQUEST_LIKE_CANCEL\n  });\n}; // initialState\n\nexport const fetchLike = (userId, postsId) => async dispatch => {\n  const response = await axios.get(`/api/v1/user/${userId}/like`);\n  const isLiked = await response.data.userLikePostIds.includes(postsId);\n  dispatch({\n    type: FETCH_LIKE,\n    payload: response.data.postLikeList,\n    isLiked: isLiked\n  });\n};\nconst initialState = {\n  isLiked: false,\n  userLikePostIds: [],\n  commentLikeList: []\n};\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case REQUEST_LIKE:\n      return { ...state,\n        isLiked: true\n      };\n\n    case REQUEST_LIKE_CANCEL:\n      return { ...state,\n        isLiked: false\n      };\n\n    case FETCH_LIKE:\n      return { ...state,\n        postLikeList: action.paylaod,\n        isLiked: action.isLiked\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/redux/module/like.js"],"names":["axios","expireToken","Cookies","cookies","REQUEST_LIKE","REQUEST_LIKE_CANCEL","FETCH_LIKE","requestLike","postsId","userId","dispatch","data","response","post","headers","ACCESS_TOKEN","get","accessToken","type","requestLikeCancel","delete","fetchLike","isLiked","userLikePostIds","includes","payload","postLikeList","initialState","commentLikeList","reducer","state","action","paylaod"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,MAAMC,OAAO,GAAG,IAAID,OAAJ,EAAhB,C,CACA;;AACA,MAAME,YAAY,GAAG,cAArB;AACA,MAAMC,mBAAmB,GAAG,qBAA5B;AACA,MAAMC,UAAU,GAAG,YAAnB,C,CACA;;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,OAAD,EAAUC,MAAV,KAAsBC,QAAD,IAAc;AAC5D,MAAIC,IAAI,GAAG;AACTH,IAAAA,OAAO,EAAEA,OADA;AAETC,IAAAA,MAAM,EAAEA;AAFC,GAAX;AAIAR,EAAAA,WAAW;AACX,QAAMW,QAAQ,GAAGZ,KAAK,CAACa,IAAN,CAAW,mBAAX,EAAgCF,IAAhC,EAAsC;AACrDG,IAAAA,OAAO,EAAE;AACPC,MAAAA,YAAY,EAAEZ,OAAO,CAACa,GAAR,CAAY,MAAZ,EAAoBC;AAD3B;AAD4C,GAAtC,CAAjB;AAMAP,EAAAA,QAAQ,CAAC;AAAEQ,IAAAA,IAAI,EAAEd;AAAR,GAAD,CAAR;AACD,CAbM;AAeP,OAAO,MAAMe,iBAAiB,GAAG,CAACX,OAAD,EAAUC,MAAV,EAAkBQ,WAAlB,KAC/BP,QADiE,IAE9D;AACHV,EAAAA,KAAK,CAACoB,MAAN,CAAc,0CAAyCZ,OAAQ,IAAGC,MAAO,EAAzE;AACAC,EAAAA,QAAQ,CAAC;AAAEQ,IAAAA,IAAI,EAAEb;AAAR,GAAD,CAAR;AACD,CALM,C,CAMP;;AACA,OAAO,MAAMgB,SAAS,GAAG,CAACZ,MAAD,EAASD,OAAT,KAAqB,MAAOE,QAAP,IAAoB;AAChE,QAAME,QAAQ,GAAG,MAAMZ,KAAK,CAACgB,GAAN,CAAW,gBAAeP,MAAO,OAAjC,CAAvB;AACA,QAAMa,OAAO,GAAG,MAAMV,QAAQ,CAACD,IAAT,CAAcY,eAAd,CAA8BC,QAA9B,CAAuChB,OAAvC,CAAtB;AACAE,EAAAA,QAAQ,CAAC;AACPQ,IAAAA,IAAI,EAAEZ,UADC;AAEPmB,IAAAA,OAAO,EAAEb,QAAQ,CAACD,IAAT,CAAce,YAFhB;AAGPJ,IAAAA,OAAO,EAAEA;AAHF,GAAD,CAAR;AAKD,CARM;AASP,MAAMK,YAAY,GAAG;AACnBL,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,eAAe,EAAE,EAFE;AAGnBK,EAAAA,eAAe,EAAE;AAHE,CAArB;AAMA,eAAe,SAASC,OAAT,GAA+C;AAAA,MAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,MAARI,MAAQ;;AAC5D,UAAQA,MAAM,CAACb,IAAf;AACE,SAAKd,YAAL;AACE,aAAO,EACL,GAAG0B,KADE;AAELR,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKjB,mBAAL;AACE,aAAO,EACL,GAAGyB,KADE;AAELR,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKhB,UAAL;AACE,aAAO,EACL,GAAGwB,KADE;AAELJ,QAAAA,YAAY,EAAEK,MAAM,CAACC,OAFhB;AAGLV,QAAAA,OAAO,EAAES,MAAM,CAACT;AAHX,OAAP;;AAKF;AACE,aAAOQ,KAAP;AAlBJ;AAoBD","sourcesContent":["import axios from \"axios\";\nimport expireToken from \"../../utils/expireToken\";\nimport Cookies from \"universal-cookie\";\nconst cookies = new Cookies();\n// actiontype\nconst REQUEST_LIKE = \"REQUEST_LIKE\";\nconst REQUEST_LIKE_CANCEL = \"REQUEST_LIKE_CANCEL\";\nconst FETCH_LIKE = \"FETCH_LIKE\";\n//action\n\nexport const requestLike = (postsId, userId) => (dispatch) => {\n  let data = {\n    postsId: postsId,\n    userId: userId,\n  };\n  expireToken();\n  const response = axios.post(\"/api/v1/post-like\", data, {\n    headers: {\n      ACCESS_TOKEN: cookies.get(\"user\").accessToken,\n    },\n  });\n\n  dispatch({ type: REQUEST_LIKE });\n};\n\nexport const requestLikeCancel = (postsId, userId, accessToken) => (\n  dispatch\n) => {\n  axios.delete(`http://localhost:8080/api/v1/post-like/${postsId}/${userId}`);\n  dispatch({ type: REQUEST_LIKE_CANCEL });\n};\n// initialState\nexport const fetchLike = (userId, postsId) => async (dispatch) => {\n  const response = await axios.get(`/api/v1/user/${userId}/like`);\n  const isLiked = await response.data.userLikePostIds.includes(postsId);\n  dispatch({\n    type: FETCH_LIKE,\n    payload: response.data.postLikeList,\n    isLiked: isLiked,\n  });\n};\nconst initialState = {\n  isLiked: false,\n  userLikePostIds: [],\n  commentLikeList: [],\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case REQUEST_LIKE:\n      return {\n        ...state,\n        isLiked: true,\n      };\n    case REQUEST_LIKE_CANCEL:\n      return {\n        ...state,\n        isLiked: false,\n      };\n    case FETCH_LIKE:\n      return {\n        ...state,\n        postLikeList: action.paylaod,\n        isLiked: action.isLiked,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}