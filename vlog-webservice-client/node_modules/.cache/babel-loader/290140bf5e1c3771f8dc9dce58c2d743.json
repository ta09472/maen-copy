{"ast":null,"code":"var _jsxFileName = \"/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/components/channel/Channel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport SideNav from \"../common/SideNav\";\nimport ChannelWrapperStyled from \"../styled/channelStyled/ChannelWrapperStyled\";\nimport ChannelContentWrapper from \"../styled/channelStyled/ChannelContentWrapper\";\nimport ChannelInfoWrapper from \"./ChannelInfoWrapper\";\nimport Content from \"../main/Content\";\nimport ContentWrapper from \"../styled/mainStyled/ContentWrapper\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchChannel } from \"../../redux/module/channel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Channel = () => {\n  _s();\n\n  const post = useSelector(state => state.post.postDetail);\n  const userId = post.authorId;\n  const dispatch = useDispatch();\n  const isMobile = useMediaQuery({\n    query: \"(max-width:1024px)\"\n  });\n  useEffect(() => {\n    if (post.authorId) {\n      const response = dispatch(fetchChannel(post.authorId));\n    } else {\n      return null;\n    }\n  });\n  document.body.style.overflow = \"auto\";\n  return /*#__PURE__*/_jsxDEV(ChannelWrapperStyled, {\n    children: [isMobile ? null : /*#__PURE__*/_jsxDEV(SideNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(ContentWrapper, {\n      children: /*#__PURE__*/_jsxDEV(ChannelInfoWrapper, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Channel, \"PZUAhQfLWGjvWR59pJK9XGLnIso=\", false, function () {\n  return [useSelector, useDispatch, useMediaQuery];\n});\n\n_c = Channel;\nexport default Channel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Channel\");","map":{"version":3,"sources":["/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/components/channel/Channel.js"],"names":["React","useState","useEffect","useLayoutEffect","SideNav","ChannelWrapperStyled","ChannelContentWrapper","ChannelInfoWrapper","Content","ContentWrapper","useMediaQuery","useDispatch","useSelector","fetchChannel","Channel","post","state","postDetail","userId","authorId","dispatch","isMobile","query","response","document","body","style","overflow"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,eAArC,QAA4D,OAA5D;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,oBAAP,MAAiC,8CAAjC;AACA,OAAOC,qBAAP,MAAkC,+CAAlC;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,4BAA7B;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAMC,IAAI,GAAGH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACD,IAAN,CAAWE,UAAvB,CAAxB;AAEA,QAAMC,MAAM,GAAGH,IAAI,CAACI,QAApB;AACA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,QAAQ,GAAGX,aAAa,CAAC;AAC7BY,IAAAA,KAAK,EAAE;AADsB,GAAD,CAA9B;AAIApB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,IAAI,CAACI,QAAT,EAAmB;AACjB,YAAMI,QAAQ,GAAGH,QAAQ,CAACP,YAAY,CAACE,IAAI,CAACI,QAAN,CAAb,CAAzB;AACD,KAFD,MAEO;AACL,aAAO,IAAP;AACD;AACF,GANQ,CAAT;AAQAK,EAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,QAApB,GAA+B,MAA/B;AACA,sBACE,QAAC,oBAAD;AAAA,eACGN,QAAQ,GAAG,IAAH,gBAAU,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADrB,eAEE,QAAC,cAAD;AAAA,6BACE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA1BD;;GAAMP,O;UACSF,W,EAGID,W,EACAD,a;;;KALbI,O;AA4BN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport SideNav from \"../common/SideNav\";\nimport ChannelWrapperStyled from \"../styled/channelStyled/ChannelWrapperStyled\";\nimport ChannelContentWrapper from \"../styled/channelStyled/ChannelContentWrapper\";\nimport ChannelInfoWrapper from \"./ChannelInfoWrapper\";\nimport Content from \"../main/Content\";\nimport ContentWrapper from \"../styled/mainStyled/ContentWrapper\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchChannel } from \"../../redux/module/channel\";\n\nconst Channel = () => {\n  const post = useSelector((state) => state.post.postDetail);\n\n  const userId = post.authorId;\n  const dispatch = useDispatch();\n  const isMobile = useMediaQuery({\n    query: \"(max-width:1024px)\",\n  });\n\n  useEffect(() => {\n    if (post.authorId) {\n      const response = dispatch(fetchChannel(post.authorId));\n    } else {\n      return null;\n    }\n  });\n\n  document.body.style.overflow = \"auto\";\n  return (\n    <ChannelWrapperStyled>\n      {isMobile ? null : <SideNav />}\n      <ContentWrapper>\n        <ChannelInfoWrapper />\n      </ContentWrapper>\n    </ChannelWrapperStyled>\n  );\n};\n\nexport default Channel;\n"]},"metadata":{},"sourceType":"module"}