{"ast":null,"code":"import axios from \"axios\"; //actiontype\n\nconst LOGIN_REQUEST = \"LOGIN_REQUEST\";\nconst LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\nconst GET_CODE = \"GET_CODE\";\nconst SEND_CODE = \"SEND_CODE\";\nconst GET_PATH = \"GET_PATH\"; // action\n\nexport const loginRequest = authCode => async dispatch => {\n  const response = await axios.get(`http://localhost:8080/api/v1/jwt/${path}`, {\n    params: {\n      code: authCode\n    }\n  });\n  dispatch({\n    type: LOGIN_REQUEST,\n    payload: response.data\n  });\n};\nexport const logoutRequset = user => async dispatch => {\n  const response = await axios.post(\"url\", user);\n  dispatch({\n    type: LOGOUT_REQUEST\n  });\n};\nexport const getCode = code => dispatch => {\n  dispatch({\n    type: GET_CODE,\n    payload: code\n  });\n};\nexport const getPath = path => async dispatch => {\n  dispatch({\n    type: GET_PATH,\n    payload: path\n  });\n}; // initialState\n\nconst initialState = {\n  isLoggedIn: false,\n  user: {},\n  code: null,\n  path: \"\"\n};\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return { ...state,\n        isLoggedIn: true,\n        user: action.payload\n      };\n\n    case LOGOUT_REQUEST:\n      return { ...state,\n        isLoggedIn: false,\n        user: {}\n      };\n\n    case GET_CODE:\n      return { ...state,\n        code: action.payload\n      };\n\n    case GET_PATH:\n      return { ...state,\n        path: action.payload\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/redux/module/login.js"],"names":["axios","LOGIN_REQUEST","LOGOUT_REQUEST","GET_CODE","SEND_CODE","GET_PATH","loginRequest","authCode","dispatch","response","get","path","params","code","type","payload","data","logoutRequset","user","post","getCode","getPath","initialState","isLoggedIn","reducer","state","action"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,cAAc,GAAG,gBAAvB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,QAAQ,GAAG,UAAjB,C,CACA;;AAEA,OAAO,MAAMC,YAAY,GAAIC,QAAD,IAAc,MAAOC,QAAP,IAAoB;AAC5D,QAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,oCAAmCC,IAAK,EAAnD,EAAsD;AAC3EC,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,EAAEN;AADA;AADmE,GAAtD,CAAvB;AAKAC,EAAAA,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAEb,aAAR;AAAuBc,IAAAA,OAAO,EAAEN,QAAQ,CAACO;AAAzC,GAAD,CAAR;AACD,CAPM;AASP,OAAO,MAAMC,aAAa,GAAIC,IAAD,IAAU,MAAOV,QAAP,IAAoB;AACzD,QAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACmB,IAAN,CAAW,KAAX,EAAkBD,IAAlB,CAAvB;AACAV,EAAAA,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAEZ;AAAR,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMkB,OAAO,GAAIP,IAAD,IAAWL,QAAD,IAAc;AAC7CA,EAAAA,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAEX,QAAR;AAAkBY,IAAAA,OAAO,EAAEF;AAA3B,GAAD,CAAR;AACD,CAFM;AAIP,OAAO,MAAMQ,OAAO,GAAIV,IAAD,IAAU,MAAOH,QAAP,IAAoB;AACnDA,EAAAA,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAET,QAAR;AAAkBU,IAAAA,OAAO,EAAEJ;AAA3B,GAAD,CAAR;AACD,CAFM,C,CAIP;;AAEA,MAAMW,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,KADO;AAEnBL,EAAAA,IAAI,EAAE,EAFa;AAGnBL,EAAAA,IAAI,EAAE,IAHa;AAInBF,EAAAA,IAAI,EAAE;AAJa,CAArB;AAOA,eAAe,SAASa,OAAT,GAA+C;AAAA,MAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,MAARI,MAAQ;;AAC5D,UAAQA,MAAM,CAACZ,IAAf;AACE,SAAKb,aAAL;AACE,aAAO,EACL,GAAGwB,KADE;AAELF,QAAAA,UAAU,EAAE,IAFP;AAGLL,QAAAA,IAAI,EAAEQ,MAAM,CAACX;AAHR,OAAP;;AAKF,SAAKb,cAAL;AACE,aAAO,EACL,GAAGuB,KADE;AAELF,QAAAA,UAAU,EAAE,KAFP;AAGLL,QAAAA,IAAI,EAAE;AAHD,OAAP;;AAKF,SAAKf,QAAL;AACE,aAAO,EACL,GAAGsB,KADE;AAELZ,QAAAA,IAAI,EAAEa,MAAM,CAACX;AAFR,OAAP;;AAIF,SAAKV,QAAL;AACE,aAAO,EACL,GAAGoB,KADE;AAELd,QAAAA,IAAI,EAAEe,MAAM,CAACX;AAFR,OAAP;;AAIF;AACE,aAAOU,KAAP;AAxBJ;AA0BD","sourcesContent":["import axios from \"axios\";\n//actiontype\n\nconst LOGIN_REQUEST = \"LOGIN_REQUEST\";\nconst LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\nconst GET_CODE = \"GET_CODE\";\nconst SEND_CODE = \"SEND_CODE\";\nconst GET_PATH = \"GET_PATH\";\n// action\n\nexport const loginRequest = (authCode) => async (dispatch) => {\n  const response = await axios.get(`http://localhost:8080/api/v1/jwt/${path}`, {\n    params: {\n      code: authCode,\n    },\n  });\n  dispatch({ type: LOGIN_REQUEST, payload: response.data });\n};\n\nexport const logoutRequset = (user) => async (dispatch) => {\n  const response = await axios.post(\"url\", user);\n  dispatch({ type: LOGOUT_REQUEST });\n};\n\nexport const getCode = (code) => (dispatch) => {\n  dispatch({ type: GET_CODE, payload: code });\n};\n\nexport const getPath = (path) => async (dispatch) => {\n  dispatch({ type: GET_PATH, payload: path });\n};\n\n// initialState\n\nconst initialState = {\n  isLoggedIn: false,\n  user: {},\n  code: null,\n  path: \"\",\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return {\n        ...state,\n        isLoggedIn: true,\n        user: action.payload,\n      };\n    case LOGOUT_REQUEST:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: {},\n      };\n    case GET_CODE:\n      return {\n        ...state,\n        code: action.payload,\n      };\n    case GET_PATH:\n      return {\n        ...state,\n        path: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}