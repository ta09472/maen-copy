{"ast":null,"code":"var _jsxFileName = \"/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/components/upload/Edit.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ButtonWrapper from \"../styled/uploadStyled/ButtonWrapper\";\nimport UploadButtonStyled from \"../styled/uploadStyled/UploadButtonStyled\";\nimport UploadWrapper from \"../styled/uploadStyled/UploadWrapper\";\nimport InputWrapper from \"../styled/uploadStyled/InputWrapper\";\nimport DescriptionInput from \"../styled/uploadStyled/DescriptionInput\";\nimport CaptionInput from \"../styled/uploadStyled/CaptionInput\";\nimport PostForm from \"../upload/PostForm\";\nimport UploaderStyled from \"../styled/uploadStyled/UploaderStyled\";\nimport PostFormStyled from \"../styled/uploadStyled/PostFormStyled\";\nimport FormStyled from \"../styled/uploadStyled/FormStyled\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { MdPresentToAll } from \"react-icons/md\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ntoast.configure();\n\nconst UploadTest = () => {\n  _s();\n\n  const cookies = new Cookies();\n  /* tag 분리 하는 로직 */\n\n  const [tagList, setTagList] = useState([]);\n  const [isValid, setIsVaild] = useState(\"black\");\n  const [tag, setTag] = useState(\"\");\n  const navigate = useNavigate();\n  const userData = cookies.get(\"user\");\n  const editPost = useSelector(state => state.post.postDetail);\n  console.log(editPost);\n\n  const handleChange = e => {\n    if (e.keyCode == 32) {\n      setTag(\"\");\n    }\n\n    setTag(e.target.value);\n  };\n\n  const handleKeyDown = e => {\n    if (e.keyCode == 32) {\n      setTagList([...tagList, tag]);\n    }\n  };\n\n  const [inputs, setInputs] = useState({\n    userId: ``,\n    tags: `${editPost.tags}`,\n    description: `${editPost.description}`,\n    video: \"\"\n  });\n\n  const onChange = e => {\n    setInputs({ ...inputs,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n\n    if (file !== null) {\n      setIsVaild(\"#4cd137\");\n    }\n\n    const video = file;\n    setInputs({ ...inputs,\n      [e.target.name]: video\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"video\", inputs.video);\n    formData.append(\"userId\", userData.userId);\n    formData.append(\"tags\", inputs.tags);\n    formData.append(\"description\", inputs.description);\n    await axios.post(\"http://localhost:8080/api/v1/posts/\", formData, {\n      headers: {\n        encType: \"multipart/form-data\"\n      }\n    }).then(res => {\n      //handle success\n      navigate(\"/\");\n      toast.success(\"업로드 되었습니다. :)\", {\n        position: toast.POSITION.TOP_CENTER\n      });\n    }).catch(err => {\n      //handle error\n      toast.error(\"업로드에 실패하였습니다. :(\", {\n        position: toast.POSITION.TOP_CENTER\n      });\n      navigate(\"/\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(UploadWrapper, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(FormStyled, {\n          children: [/*#__PURE__*/_jsxDEV(PostFormStyled, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Upload Your Days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(UploaderStyled, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"inputFile\",\n                children: /*#__PURE__*/_jsxDEV(MdPresentToAll, {\n                  size: \"50px\",\n                  color: isValid,\n                  cursor: \"pointer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"inputFile\",\n                type: \"file\",\n                name: \"video\",\n                accept: \".mp4\",\n                onChange: handleFileChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputWrapper, {\n            children: [/*#__PURE__*/_jsxDEV(CaptionInput, {\n              type: \"text\",\n              name: \"tags\",\n              placeholder: \"Input Tags\",\n              value: inputs.tags,\n              onChange: onChange,\n              onKeyDown: handleKeyDown\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DescriptionInput, {\n              type: \"text\",\n              name: \"description\",\n              placeholder: \"Description\",\n              value: inputs.description,\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n              children: /*#__PURE__*/_jsxDEV(UploadButtonStyled, {\n                children: \"upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(UploadTest, \"+g4oy6yU5d0/C6EFDHur56jX3FI=\", false, function () {\n  return [useNavigate, useSelector];\n});\n\n_c = UploadTest;\nexport default UploadTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadTest\");","map":{"version":3,"sources":["/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/components/upload/Edit.js"],"names":["React","useState","ButtonWrapper","UploadButtonStyled","UploadWrapper","InputWrapper","DescriptionInput","CaptionInput","PostForm","UploaderStyled","PostFormStyled","FormStyled","useNavigate","toast","MdPresentToAll","axios","Cookies","useSelector","configure","UploadTest","cookies","tagList","setTagList","isValid","setIsVaild","tag","setTag","navigate","userData","get","editPost","state","post","postDetail","console","log","handleChange","e","keyCode","target","value","handleKeyDown","inputs","setInputs","userId","tags","description","video","onChange","name","handleFileChange","file","files","handleSubmit","preventDefault","formData","FormData","append","headers","encType","then","res","success","position","POSITION","TOP_CENTER","catch","err","error"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ButtonWrapper from \"../styled/uploadStyled/ButtonWrapper\";\nimport UploadButtonStyled from \"../styled/uploadStyled/UploadButtonStyled\";\nimport UploadWrapper from \"../styled/uploadStyled/UploadWrapper\";\nimport InputWrapper from \"../styled/uploadStyled/InputWrapper\";\nimport DescriptionInput from \"../styled/uploadStyled/DescriptionInput\";\nimport CaptionInput from \"../styled/uploadStyled/CaptionInput\";\nimport PostForm from \"../upload/PostForm\";\nimport UploaderStyled from \"../styled/uploadStyled/UploaderStyled\";\nimport PostFormStyled from \"../styled/uploadStyled/PostFormStyled\";\nimport FormStyled from \"../styled/uploadStyled/FormStyled\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { MdPresentToAll } from \"react-icons/md\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nimport { useSelector } from \"react-redux\";\n\ntoast.configure();\n\nconst UploadTest = () => {\n  const cookies = new Cookies();\n  /* tag 분리 하는 로직 */\n  const [tagList, setTagList] = useState([]);\n  const [isValid, setIsVaild] = useState(\"black\");\n  const [tag, setTag] = useState(\"\");\n  const navigate = useNavigate();\n  const userData = cookies.get(\"user\");\n  const editPost = useSelector((state) => state.post.postDetail);\n  console.log(editPost);\n  const handleChange = (e) => {\n    if (e.keyCode == 32) {\n      setTag(\"\");\n    }\n    setTag(e.target.value);\n  };\n  const handleKeyDown = (e) => {\n    if (e.keyCode == 32) {\n      setTagList([...tagList, tag]);\n    }\n  };\n\n  const [inputs, setInputs] = useState({\n    userId: ``,\n    tags: `${editPost.tags}`,\n    description: `${editPost.description}`,\n    video: \"\",\n  });\n\n  const onChange = (e) => {\n    setInputs({\n      ...inputs,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file !== null) {\n      setIsVaild(\"#4cd137\");\n    }\n    const video = file;\n\n    setInputs({\n      ...inputs,\n      [e.target.name]: video,\n    });\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"video\", inputs.video);\n    formData.append(\"userId\", userData.userId);\n    formData.append(\"tags\", inputs.tags);\n    formData.append(\"description\", inputs.description);\n\n    await axios\n      .post(\"http://localhost:8080/api/v1/posts/\", formData, {\n        headers: {\n          encType: \"multipart/form-data\",\n        },\n      })\n      .then((res) => {\n        //handle success\n        navigate(\"/\");\n        toast.success(\"업로드 되었습니다. :)\", {\n          position: toast.POSITION.TOP_CENTER,\n        });\n      })\n      .catch((err) => {\n        //handle error\n        toast.error(\"업로드에 실패하였습니다. :(\", {\n          position: toast.POSITION.TOP_CENTER,\n        });\n        navigate(\"/\");\n      });\n  };\n\n  return (\n    <>\n      <UploadWrapper>\n        <form onSubmit={handleSubmit}>\n          <FormStyled>\n            <PostFormStyled>\n              <h3>Upload Your Days</h3>\n              <UploaderStyled>\n                <label htmlFor=\"inputFile\">\n                  <MdPresentToAll\n                    size=\"50px\"\n                    color={isValid}\n                    cursor=\"pointer\"\n                  />\n                </label>\n                <input\n                  id=\"inputFile\"\n                  type=\"file\"\n                  name=\"video\"\n                  accept=\".mp4\"\n                  onChange={handleFileChange}\n                />\n              </UploaderStyled>\n            </PostFormStyled>\n            <InputWrapper>\n              <CaptionInput\n                type=\"text\"\n                name=\"tags\"\n                placeholder=\"Input Tags\"\n                value={inputs.tags}\n                onChange={onChange}\n                onKeyDown={handleKeyDown}\n              />\n              <DescriptionInput\n                type=\"text\"\n                name=\"description\"\n                placeholder=\"Description\"\n                value={inputs.description}\n                onChange={onChange}\n              />\n\n              <ButtonWrapper>\n                <UploadButtonStyled>upload</UploadButtonStyled>\n              </ButtonWrapper>\n            </InputWrapper>\n          </FormStyled>\n        </form>\n      </UploadWrapper>\n    </>\n  );\n};\n\nexport default UploadTest;\n"]},"metadata":{},"sourceType":"module"}