{"ast":null,"code":"import axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nconst cookies = new Cookies(); //actiontype\n\nconst LOGIN_REQUEST = \"LOGIN_REQUEST\";\nconst LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\nconst GET_CODE = \"GET_CODE\";\nconst SEND_CODE = \"SEND_CODE\";\nconst GET_PATH = \"GET_PATH\"; // action\n\nexport const loginRequest = (path, authCode) => async dispatch => {\n  const response = await axios.get(`http://localhost:8080/api/v1/jwt/${path}`, {\n    params: {\n      code: authCode\n    }\n  });\n  cookies.set(\"user\", response.data, {\n    path: \"/\"\n  });\n  cookies.set(\"isLoggedIn\", true, {\n    path: \"/\"\n  });\n  dispatch({\n    type: LOGIN_REQUEST,\n    payload: response.data\n  });\n};\nexport const logoutRequset = () => async dispatch => {\n  cookies.remove(\"isLoggedIn\");\n  cookies.remove(\"user\");\n  dispatch({\n    type: LOGOUT_REQUEST\n  });\n};\nexport const getCode = code => dispatch => {\n  dispatch({\n    type: GET_CODE,\n    payload: code\n  });\n};\nexport const getPath = path => async dispatch => {\n  dispatch({\n    type: GET_PATH,\n    payload: path\n  });\n}; // initialState\n\nconst initialState = {\n  isLoggedIn: false,\n  user: {},\n  code: null,\n  path: \"\"\n};\nexport default function reducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return { ...state,\n        isLoggedIn: true,\n        user: action.payload\n      };\n\n    case LOGOUT_REQUEST:\n      return { ...state,\n        isLoggedIn: false,\n        user: {}\n      };\n\n    case GET_CODE:\n      return { ...state,\n        code: action.payload\n      };\n\n    case GET_PATH:\n      return { ...state,\n        path: action.payload\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/beomsukim/2022/MAEN/maen-copy/vlog-webservice-client/src/redux/module/login.js"],"names":["axios","Cookies","cookies","LOGIN_REQUEST","LOGOUT_REQUEST","GET_CODE","SEND_CODE","GET_PATH","loginRequest","path","authCode","dispatch","response","get","params","code","set","data","type","payload","logoutRequset","remove","getCode","getPath","initialState","isLoggedIn","user","reducer","state","action"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,MAAMC,OAAO,GAAG,IAAID,OAAJ,EAAhB,C,CACA;;AAEA,MAAME,aAAa,GAAG,eAAtB;AACA,MAAMC,cAAc,GAAG,gBAAvB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,QAAQ,GAAG,UAAjB,C,CACA;;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,IAAD,EAAOC,QAAP,KAAoB,MAAOC,QAAP,IAAoB;AAClE,QAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAW,oCAAmCJ,IAAK,EAAnD,EAAsD;AAC3EK,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,EAAEL;AADA;AADmE,GAAtD,CAAvB;AAKAR,EAAAA,OAAO,CAACc,GAAR,CAAY,MAAZ,EAAoBJ,QAAQ,CAACK,IAA7B,EAAmC;AAAER,IAAAA,IAAI,EAAE;AAAR,GAAnC;AACAP,EAAAA,OAAO,CAACc,GAAR,CAAY,YAAZ,EAA0B,IAA1B,EAAgC;AAAEP,IAAAA,IAAI,EAAE;AAAR,GAAhC;AACAE,EAAAA,QAAQ,CAAC;AAAEO,IAAAA,IAAI,EAAEf,aAAR;AAAuBgB,IAAAA,OAAO,EAAEP,QAAQ,CAACK;AAAzC,GAAD,CAAR;AACD,CATM;AAWP,OAAO,MAAMG,aAAa,GAAG,MAAM,MAAOT,QAAP,IAAoB;AACrDT,EAAAA,OAAO,CAACmB,MAAR,CAAe,YAAf;AACAnB,EAAAA,OAAO,CAACmB,MAAR,CAAe,MAAf;AACAV,EAAAA,QAAQ,CAAC;AAAEO,IAAAA,IAAI,EAAEd;AAAR,GAAD,CAAR;AACD,CAJM;AAMP,OAAO,MAAMkB,OAAO,GAAIP,IAAD,IAAWJ,QAAD,IAAc;AAC7CA,EAAAA,QAAQ,CAAC;AAAEO,IAAAA,IAAI,EAAEb,QAAR;AAAkBc,IAAAA,OAAO,EAAEJ;AAA3B,GAAD,CAAR;AACD,CAFM;AAIP,OAAO,MAAMQ,OAAO,GAAId,IAAD,IAAU,MAAOE,QAAP,IAAoB;AACnDA,EAAAA,QAAQ,CAAC;AAAEO,IAAAA,IAAI,EAAEX,QAAR;AAAkBY,IAAAA,OAAO,EAAEV;AAA3B,GAAD,CAAR;AACD,CAFM,C,CAIP;;AAEA,MAAMe,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,KADO;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBX,EAAAA,IAAI,EAAE,IAHa;AAInBN,EAAAA,IAAI,EAAE;AAJa,CAArB;AAOA,eAAe,SAASkB,OAAT,GAA+C;AAAA,MAA9BC,KAA8B,uEAAtBJ,YAAsB;AAAA,MAARK,MAAQ;;AAC5D,UAAQA,MAAM,CAACX,IAAf;AACE,SAAKf,aAAL;AACE,aAAO,EACL,GAAGyB,KADE;AAELH,QAAAA,UAAU,EAAE,IAFP;AAGLC,QAAAA,IAAI,EAAEG,MAAM,CAACV;AAHR,OAAP;;AAKF,SAAKf,cAAL;AACE,aAAO,EACL,GAAGwB,KADE;AAELH,QAAAA,UAAU,EAAE,KAFP;AAGLC,QAAAA,IAAI,EAAE;AAHD,OAAP;;AAKF,SAAKrB,QAAL;AACE,aAAO,EACL,GAAGuB,KADE;AAELb,QAAAA,IAAI,EAAEc,MAAM,CAACV;AAFR,OAAP;;AAIF,SAAKZ,QAAL;AACE,aAAO,EACL,GAAGqB,KADE;AAELnB,QAAAA,IAAI,EAAEoB,MAAM,CAACV;AAFR,OAAP;;AAIF;AACE,aAAOS,KAAP;AAxBJ;AA0BD","sourcesContent":["import axios from \"axios\";\nimport Cookies from \"universal-cookie\";\nconst cookies = new Cookies();\n//actiontype\n\nconst LOGIN_REQUEST = \"LOGIN_REQUEST\";\nconst LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\nconst GET_CODE = \"GET_CODE\";\nconst SEND_CODE = \"SEND_CODE\";\nconst GET_PATH = \"GET_PATH\";\n// action\n\nexport const loginRequest = (path, authCode) => async (dispatch) => {\n  const response = await axios.get(`http://localhost:8080/api/v1/jwt/${path}`, {\n    params: {\n      code: authCode,\n    },\n  });\n  cookies.set(\"user\", response.data, { path: \"/\" });\n  cookies.set(\"isLoggedIn\", true, { path: \"/\" });\n  dispatch({ type: LOGIN_REQUEST, payload: response.data });\n};\n\nexport const logoutRequset = () => async (dispatch) => {\n  cookies.remove(\"isLoggedIn\");\n  cookies.remove(\"user\");\n  dispatch({ type: LOGOUT_REQUEST });\n};\n\nexport const getCode = (code) => (dispatch) => {\n  dispatch({ type: GET_CODE, payload: code });\n};\n\nexport const getPath = (path) => async (dispatch) => {\n  dispatch({ type: GET_PATH, payload: path });\n};\n\n// initialState\n\nconst initialState = {\n  isLoggedIn: false,\n  user: {},\n  code: null,\n  path: \"\",\n};\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return {\n        ...state,\n        isLoggedIn: true,\n        user: action.payload,\n      };\n    case LOGOUT_REQUEST:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: {},\n      };\n    case GET_CODE:\n      return {\n        ...state,\n        code: action.payload,\n      };\n    case GET_PATH:\n      return {\n        ...state,\n        path: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}